<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 3implieschaos</title>
    <link>https://3implieschaos.org/post/</link>
    <description>Recent content in Posts on 3implieschaos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 23 Jul 2022 15:21:05 -0700</lastBuildDate><atom:link href="https://3implieschaos.org/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating a Kerbal trip to the moon with KRPC</title>
      <link>https://3implieschaos.org/post/math_science/kerbal/apollo-into-orbit/</link>
      <pubDate>Sat, 23 Jul 2022 15:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/math_science/kerbal/apollo-into-orbit/</guid>
      
      <description>&lt;p&gt;&lt;img src=&#34;assets/index-02bb3.png&#34; alt=&#34;A picture of the kerbal apollo rocket&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;krpc_sanbox-into-orbit.ipynb&#34;&gt;Download&lt;/a&gt; the corresponding notebook.&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Kerbal Space Program (KSP) (1.0) is a semi-physics-realistic space exploration simulation. While it is not realistic enough to plan actual space missions, it is a fun educational tool that can get us started. With the kRPC mod (remote procedure call, which enables programatic interaction with KSP&amp;rsquo;s API), the educational potential is expanded into the world of programming. In this notebook, we will automate taking the Kerbins to the moon and back using Python, Physics, and KSP with the kRPC mod.&lt;/p&gt;
&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;
&lt;h4 id=&#34;get-ksp&#34;&gt;Get KSP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Purchase and install the Kerbal Space Program (v 1.0) &lt;a href=&#34;https://www.kerbalspaceprogram.com/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You&amp;rsquo;ll also need the &lt;a href=&#34;https://www.kerbalspaceprogram.com/games-kerbal-space-program-making-history-expansion&#34;&gt;&amp;ldquo;Making History&amp;rdquo; expansion&lt;/a&gt; which has the Apollo rocket equivalent, unless you prefer to save some money and build an equivalent rocket yourself or find the ship file online. Note that this code is tested and verified to work with the Acopollo rocket found in this expansion, so you may have to make adjustments to get alternative rockets to work.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;install-the-krpc-mod&#34;&gt;Install the KRPC mod&lt;/h4&gt;
&lt;p&gt;Follow &lt;a href=&#34;https://krpc.github.io/krpc/getting-started.html&#34;&gt;this guide&lt;/a&gt; to install the kRPC mod. More or less, you&amp;rsquo;ll grab the kRPC folder and put it in the &lt;code&gt;GameData&lt;/code&gt; folder wherever Kerbal is installed on your workstation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/index-439c4.png&#34; alt=&#34;An image that shows the folder structure of KSP on Windows&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;prepping-the-jupyter-workspace&#34;&gt;Prepping the jupyter workspace&lt;/h4&gt;
&lt;p&gt;If you are using Windows, &lt;a href=&#34;https://docs.anaconda.com/anaconda/install/windows/&#34;&gt;installing anaconda&lt;/a&gt; may be your quickest route, and then set up a kerbal environment by opensing a terminal and running:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;conda create --name kerbal
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You&amp;rsquo;ll only need to create the envrionment once. Next activate it:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;conda activate kerbal
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you are on MacOS or Linux, you can use virtualenv instead (although conda can work too).&lt;/p&gt;
&lt;p&gt;and then install the following packages:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install setuptools==57.5.
pip install protobuf~=3.19.0
pip install krpc
pip install jupyter
pip install ipykernel
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or preferably, use a requirements file:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;setuptools==57.5.0
protobuf~=3.19.0
krpc
jupyter
ipykernel
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you are using Python &amp;gt;= 3.8, you&amp;rsquo;ll have to do a little hack. Open the file in your virtual environment files with an editor and make the following change.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;FILE: Should be in your virtual environment with something along the lines of &lt;code&gt;venv/lib/python3.10/site-packages/krpc/types.py&lt;/code&gt; on line 222 and 227.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;collections&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Iterable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;collections&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;abc&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Iterable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, create the kernel that we&amp;rsquo;ll be using for this notebook:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python -m ipykernel install --user --name kerbal --display-name &amp;#34;Python (kerbal)&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and then to launch jupyter:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;going-to-the-mun&#34;&gt;Going to the Mun&lt;/h2&gt;
&lt;h3 id=&#34;connecting-to-ksp&#34;&gt;Connecting to KSP&lt;/h3&gt;
&lt;p&gt;In our first code blocks, we will be importing the libraries we need to get our astronauts to the Mun via Python. We will then connect to KSP vis the krpc plugin (assumes you have KSP up and running and the plugin working).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;krpc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;math&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;IPython.display&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; clear_output, display
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conn &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; krpc&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;connect()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;loading-the-apollo-rocket&#34;&gt;Loading the Apollo rocket&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;space_center&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;load(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;apollo001&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;space_center&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;active_vessel
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Set up streams for telemetry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ut &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_stream(&lt;span style=&#34;color:#a2f&#34;&gt;getattr&lt;/span&gt;, conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;space_center, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ut&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;altitude &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_stream(&lt;span style=&#34;color:#a2f&#34;&gt;getattr&lt;/span&gt;, vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;flight(), &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;mean_altitude&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apoapsis &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_stream(&lt;span style=&#34;color:#a2f&#34;&gt;getattr&lt;/span&gt;, vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;orbit, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;apoapsis_altitude&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stage_2_resources &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;resources_in_decouple_stage(stage&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;, cumulative&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;False&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;obt_frame &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;orbit&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;body&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;non_rotating_reference_frame
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mun_orbit &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;space_center&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;bodies[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Mun&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;position(obt_frame)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gravity-turn-into-orbit&#34;&gt;Gravity Turn into Orbit&lt;/h3&gt;
&lt;p&gt;In this next section, we are calculating the gravity turn angle. The sample provided by the KRPC samples uses a simple fraction to define the trun angle in degrees:
\[ \alpha = 90(\frac{a - s}{ e - s}) \]
where \(a\) is the current altitude, \(s\) is the altitude in which we want to start slowly turning the rocket horizontally, and \(e\) is the ending altitude where we want to have completed our turn upon reaching. This could be defined by a simple function&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;get_gravity_turn_angle&lt;/span&gt;(alt, start_alt, end_alt, turn_angle):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    new_turn_angle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; alt &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; start_alt &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;and&lt;/span&gt; alt &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; end_alt:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        frac &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (alt &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; start_alt)&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;(end_alt &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; start_alt)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        new_turn_angle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; frac &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;90.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;abs&lt;/span&gt;(new_turn_angle &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; turn_angle) &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.5&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            turn_angle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; new_turn_angle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            turn_angle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; turn_angle
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In a future blog post, we will improve the gravity turn by invoking Physics to get a more accurate turn rate. For now, as a proof of concept and to focus on the circularization physics, we will proceed with this rough linear gravity turn. Next, we actually launch the rocket and execute the gravity turn so that we reach a target apoapsis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;target_pitch_and_heading(&lt;span style=&#34;color:#666&#34;&gt;90&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;90&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;engage()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;throttle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;activate_next_stage()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;turn_angle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start_alt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;250&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end_alt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;45000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;target_alt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;700000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;state &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;LiftOff&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;while&lt;/span&gt; turn_angle &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;and&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;throttle &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    clear_output(wait&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    turn_angle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; get_gravity_turn_angle(altitude(), start_alt, end_alt, turn_angle)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; turn_angle &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;and&lt;/span&gt; apoapsis() &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; target_alt:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;target_pitch_and_heading(&lt;span style=&#34;color:#666&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;turn_angle, &lt;span style=&#34;color:#666&#34;&gt;90&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        state &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;GravityTurn&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; apoapsis() &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; target_alt&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.90&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;and&lt;/span&gt; apoapsis() &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; target_alt:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        state &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;ApoapsisRefinement&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;throttle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.25&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;while&lt;/span&gt; apoapsis() &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; target_alt:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; apoapsis() &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; target_alt:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        state &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;GoalApoapsisAchieved&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;throttle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.00&lt;/span&gt;       
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/index-41f20.png&#34; alt=&#34;The rocket starts to turn, making a 30 degree angle relative to the normal&#34;&gt;&lt;/p&gt;
&lt;p&gt;As the rocket climbs higher, it will ease into an orientation perpendicular to the radius of the Earth:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/index-a87dd.png&#34; alt=&#34;as it nears cutoff, the rocket is nearly perpendicular to the normal&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;circularizing-the-orbit&#34;&gt;Circularizing the orbit&lt;/h2&gt;
&lt;p&gt;For an idealized circular orbit above atmospheric effects, the gravitational pull of the Earth on the body provides the centripetal force, with circular orbital radius \(r\) and let&lt;/p&gt;
&lt;p&gt;\[\mu = GM\]&lt;/p&gt;
&lt;p&gt;where \(G\) is the universal gravitational constant and \(M\) is the mass of the large body (here, the Earth)&lt;/p&gt;
&lt;p&gt;KRPC provides an easy way to access that value for any given celestial body:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mu &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;orbit&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;body&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;gravitational_parameter
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Back to Physics, we now have two equations from the basics of Newtonian physics, namely:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cetripital Force: \[ F_c = \frac{m_0 v^2}{r}\]&lt;/li&gt;
&lt;li&gt;Gravitational Force: \[ F_g = \frac{m_0 GM}{r^2}\]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since these must balance out for an object to be in stead orbit, we can solve to find the ideal velocity \(v\) for a given orbit at radius \(r\):&lt;/p&gt;
&lt;p&gt;\[ F_g = m_0 a = \frac{m_0 \mu}{r^2} =\frac{m_0 v^2}{r} \]&lt;/p&gt;
&lt;p&gt;\[\implies v = \sqrt{ \frac{\mu}{r} }\]&lt;/p&gt;
&lt;p&gt;We see here that this velocity is entirely independent of the mass of the body, hence a very heavy object and a very light object which orbit at the same radius must be traveling at the same speed, assuming of course they are out of the region where atmospheric drag plays an important role.&lt;/p&gt;
&lt;h3 id=&#34;finding-an-equation-for-the-circularization-of-an-orbit&#34;&gt;Finding an equation for the circularization of an orbit&lt;/h3&gt;
&lt;p&gt;That is a starting point, but we have to dive deeper to calculate the numbers needed to actually achieve an approximation of this idealized orbit.&lt;/p&gt;
&lt;p&gt;Our next step is to invoke the &lt;em&gt;vis-viva equation&lt;/em&gt; (or also called the &lt;em&gt;orbital-energy-invariance law&lt;/em&gt;). We begin by noting that the &lt;strong&gt;specific orbital energy&lt;/strong&gt; of an orbiting object and the body it is orbiting is defined as a sum of their mutual potential energy and their total kinetic energy:&lt;/p&gt;
&lt;p&gt;\[ E_O = E_p + E_k\]&lt;/p&gt;
&lt;p&gt;For scenarios such as ours, where the orbiting object is much smaller in both size and mass than the body it orbits, this energy becomes easier to calculate since we can treat the larger body as being the center of our reference frame and hence at rest. We can also neglect the potential energy experienced by the gravitational attraction of the larger body by the smaller body. In this case,&lt;/p&gt;
&lt;p&gt;\[ E_O = \frac{m_0 v^2_0}{2} - \frac{\mu m_0}{r_0} \]&lt;/p&gt;
&lt;p&gt;The specific total energy is given as \(E_o/m_0 = \epsilon\) and this is conserved throughout the orbit (assuming the rocket is not burning fuel in an idealized orbit). Let \(v_a\) and \(r_a\) be the velocity and radius of the orbiting body at the apoapsis, and \(v_p\) and \(r_p\) similarly at the periapsis. Then energy conservation gives us the relation,&lt;/p&gt;
&lt;p&gt;\[ \epsilon = \frac{v_a^2}{2} - \frac{\mu}{r_a} = \frac{v_p^2}{2} - \frac{\mu}{r_p} \]&lt;/p&gt;
&lt;p&gt;At both \(r_a\) and \(r_p\), the velocity and radius vectors are perpendicular to each other, where hence we can invoke the conservation of angular momentum to give&lt;/p&gt;
&lt;p&gt;\[ r_p v_p = r_a v_a = Constant \]&lt;/p&gt;
&lt;p&gt;This gives us the relation that
\[ v_p =- \frac{r_a}{r_p}v_a \]&lt;/p&gt;
&lt;p&gt;and with some rearrangement of these equations, we get,&lt;/p&gt;
&lt;p&gt;\[ \frac{1}{2}\left( \frac{r_p^2 -r_a^2}{r_p^2}\right) v_a^2 = \mu \left(\frac{1}{r_a} - \frac{1}{r_p}\right) \]
\[ \frac{1}{2}v_a^2 = \mu \frac{r_p}{r_a \left( r_p + r_a \right)} \]&lt;/p&gt;
&lt;h4 id=&#34;relating-this-to-elipses-the-apoapsis-and-periapsis&#34;&gt;Relating this to elipses, the apoapsis and periapsis&lt;/h4&gt;
&lt;p&gt;From geometry of an ellipse that relates the semimajor axis to \(r_p\) and \(r_a\), \(2a = r_p + r_a\)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;  vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;orbit&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;apoapsis
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;orbit&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;semi_major_axis
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We substitute 2a in the our prior kinetic energy equation:
\[ \frac{1}{2}v_a^2 =  \mu \frac{2a -r_a}{2 r_a a}  \]
\[ \frac{1}{2}v_a^2 =  \mu \left(\frac{1}{r_a} - \frac{1}{2a}\right)  \]&lt;/p&gt;
&lt;p&gt;\[ v_a^2 = \mu \left( \frac{2}{r_a} - \frac{1}{a}\right) \]&lt;/p&gt;
&lt;p&gt;In a circularized orbit, \(a = r\), and so the velocity we need to have is&lt;/p&gt;
&lt;p&gt;\[ v_a^2 = \mu \left( \frac{2}{r_a} - \frac{1}{r_a}\right) = \mu \left( \frac{1}{r_a}\right) \]&lt;/p&gt;
&lt;p&gt;The \(\Delta v\) we need to achieve is the difference between these two velocities,&lt;/p&gt;
&lt;p&gt;$$ \Delta v = \sqrt{ \mu} \left( \sqrt{\left( \frac{1}{r_a}\right) } - \sqrt{\left( \frac{2}{r_a} - \frac{1}{a}\right)}\right) $$
$$ = \sqrt{\frac{\mu}{r_a}}\left( 1 - \sqrt{ \frac{2a -r_a}{a}}\right) $$&lt;/p&gt;
&lt;p&gt;In krpc code,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;delta_v &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sqrt(mu&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;r)&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sqrt((&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;a1&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;r)&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;a1))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this number in hand, we can do a little more math which will be discussed in more detail later to find the burn time. This calculation is highly dependent on the engine and design of the rocket in question:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;available_thrust
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Isp &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;specific_impulse &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;9.82&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m0 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;mass
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; m0 &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;exp(delta_v &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; Isp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fr &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; f &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; Isp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;burn_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (m0 &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; m1) &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; fr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_node(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ut() &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;orbit&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time_to_apoapsis, prograde&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;delta_v)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# https://krpc.github.io/krpc/tutorials/launch-into-orbit.html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Orientating ship for circularization burn&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;disengage()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sas &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;.1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sas_mode &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sas_mode&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;maneuver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;wait()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Waiting until circularization burn&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;burn_ut &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ut() &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;orbit&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;time_to_apoapsis &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; (burn_time&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2.&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lead_time &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;space_center&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;warp_to(burn_ut &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; lead_time)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Execute burn&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Ready to execute burn&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time_to_apoapsis &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_stream(&lt;span style=&#34;color:#a2f&#34;&gt;getattr&lt;/span&gt;, vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;orbit, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;time_to_apoapsis&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;while&lt;/span&gt; time_to_apoapsis() &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; (burn_time&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2.&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;wait()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Executing burn&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;throttle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(burn_time &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.05&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Fine tuning&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;throttle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.05&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;remaining_burn &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_stream(node&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;remaining_burn_vector, node&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;reference_frame)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;#vessel.auto_pilot.engage()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;disengage()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sas &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;.1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sas_mode &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;auto_pilot&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sas_mode&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;maneuver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;throttle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.03&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;while&lt;/span&gt; node&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;remaining_delta_v &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;throttle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;remove()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Launch complete&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Orientating ship for circularization burn
Waiting until circularization burn
Ready to execute burn
Executing burn
Fine tuning
Launch complete
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If all went well, you should be in a fairly accurate (and we can make it even better!) circularized orbit:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/index-2e331.png&#34; alt=&#34;an orbital view of the rocket showing a circularized orbit&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now that we have circularized our orbit, we can do some house keeping and eject uneeded components from the rocket. In a future iteration, we will want to eject these as soon as we clear the atmosphere in order to reduce as much mass as soon as possible:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Drop stage 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;activate_next_stage()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Drop the escape rocket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;activate_next_stage()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Drop the shields to lower weight&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vessel&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;control&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;activate_next_stage()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/index-50aec.png&#34; alt=&#34;showing the rocket against the milkyway with less stages&#34;&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Rössler Strange Attractor with Python: Part 1</title>
      <link>https://3implieschaos.org/post/math_science/chaos/rossler_strange_attractor_with_python_series/rossler_strange_attractor_with_python_part1/</link>
      <pubDate>Sun, 03 Jul 2022 19:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/math_science/chaos/rossler_strange_attractor_with_python_series/rossler_strange_attractor_with_python_part1/</guid>
      
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;One of the most popular and widely known strange attractors is the Rössler strange attractor. We will explore
this mathematical object using Python in a series of blog posts. Before we go into any detail about what it is, what
is a strange attractor, and so on, let&amp;rsquo;s first take a quick look at it using some simple Python code.&lt;/p&gt;
&lt;h2 id=&#34;simple-integration-using-eulers-method&#34;&gt;Simple Integration using Euler&amp;rsquo;s method&lt;/h2&gt;
&lt;p&gt;This is a quick intro, and hopefully part of a longer series on using Python to analyze the Rössler Strange Attractor.&lt;/p&gt;
&lt;p&gt;We begin by importing the basic libraries that we will use as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;numpy&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;matplotlib&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;%&lt;/span&gt;matplotlib inline
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; Axes3D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;define-rössler-system&#34;&gt;Define Rössler System&lt;/h3&gt;
&lt;p&gt;Next we define a python function which will define the Rössler equations for us to integrate and graph. The Rössler equestions are&lt;/p&gt;
&lt;p&gt;$$ \dot{x} = -y -z $$
$$ \dot{y} =  x + ay $$
$$ \dot{z} = b + z(x-c) $$&lt;/p&gt;
&lt;p&gt;They function over a number of parameters, something we will explore in more detail in future posts. For now, let&amp;rsquo;s just pick a pretty common set of parameters:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;rossler&lt;/span&gt;(x, y, z, a&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.2&lt;/span&gt;, b&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.2&lt;/span&gt;, c&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5.7&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_dot &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; y &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; z
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y_dot &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; x &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; a&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    z_dot &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; b &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; z&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;(x&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;c)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; x_dot, y_dot, z_dot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;numerical-integration&#34;&gt;Numerical Integration&lt;/h3&gt;
&lt;p&gt;These equations can&amp;rsquo;t be solved for non-trivial sets of parameters, so we must integrate them numerically. Here, we use a very simpler Euler&amp;rsquo;s method of integration to get us out the door. This method is &lt;em&gt;never&lt;/em&gt; a good idea to use for non-trivial applications, but is a quick easy way to get started.&lt;/p&gt;
&lt;p&gt;Euler&amp;rsquo;s method makes use of the definition of a derivative:&lt;/p&gt;
&lt;p&gt;$$\dot{x} = \frac{dx}{dt} = \lim_{\Delta \rightarrow 0} \frac{\Delta x}{\Delta t} $$&lt;/p&gt;
&lt;p&gt;To create a simplistic way to numerical integrate where:&lt;/p&gt;
&lt;p&gt;$$ \Delta x = \dot{x} \Delta t $$&lt;/p&gt;
&lt;p&gt;This isn&amp;rsquo;t very accurate over the long term, but with small enough $\Delta t$ can give a fair approximation in the short term. For this simple demo, we choose to let $dt = 0.05 s$ and choose to plot 1000 points for a total of 50 seconds of data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0.05&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stepCnt &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next we set up NUMPY arrays that will hold the 1000 points for each dimension, and then set intitial values (what initial values to use will be explained in more detail in a post where we discuss the parameters as well).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Need one more for the initial values&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;empty((stepCnt &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;empty((stepCnt &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zs &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;empty((stepCnt &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Setting initial values&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs[&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;], ys[&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;], zs[&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;1.&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;1.05&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we run the Euler&amp;rsquo;s method integration to populate the arrays:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Stepping through &amp;#34;time&amp;#34;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;range&lt;/span&gt;(stepCnt):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Derivatives of the X, Y, Z state&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_dot, y_dot, z_dot &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; rossler(xs[i], ys[i], zs[i])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xs[i &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; xs[i] &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; (x_dot &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; dt)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ys[i &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ys[i] &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; (y_dot &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; dt)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    zs[i &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; zs[i] &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; (z_dot &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; dt)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;plot&#34;&gt;Plot&lt;/h3&gt;
&lt;p&gt;Our final step is to plot the results so that we can see the &lt;code&gt;trajetory&lt;/code&gt; of the Rössler system over these 50 seconds of integration.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fig &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;figure()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axes(projection&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot3D(xs, ys, zs, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Rössler&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_12_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next&lt;/h3&gt;
&lt;p&gt;OK, we have seen it, but what is it, and how deep does the rabbit hole go? Part 2 will explore this further.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Headless Python Selenium With Behave</title>
      <link>https://3implieschaos.org/post/tech/comp_sci/headless-python-selenium-with-behave/</link>
      <pubDate>Sun, 26 Aug 2018 19:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/tech/comp_sci/headless-python-selenium-with-behave/</guid>
      
      <description>&lt;p&gt;Testing software can often be seen as the least enjoyable part of the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Systems_development_life_cycle&#34;&gt;systems development life cycle&lt;/a&gt;.
It is easy to see why. Developing the actual application that does the magic
that the end user finds value in is indeed a very exciting core to the process.
And yet, what you produce could be worthless if it doesn&amp;rsquo;t work for the user.&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s say you are working on an individual pet project. The fun part is
coding it up and getting it to do something. Here, I&amp;rsquo;m going to use a simple
&lt;em&gt;Flask&lt;/em&gt; app that serves up some Wikipedia page count stats as an example.
As a developer adds layers and new features and new bells and whistles and
pipes and extension cords to their project, things which they
haven&amp;rsquo;t developed in months or years can break, and if they don&amp;rsquo;t have a good testing
suite in place, they won&amp;rsquo;t catch it and will serve out a degraded experience.
That&amp;rsquo;s a dis-service to their users, but even to themselves, whose hard work
has gone to waste because that piece of the project, which they might have
spent many hours working on, might as well not even exist if it doesn&amp;rsquo;t work.
Worse yet, if they break their app entirely, it could take hours and hours
of searching for a bug.&lt;/p&gt;
&lt;p&gt;If instead there is a systematic testing suite in place,
each incremental change can be subjected to a battery of tests that help ensure
that it is safe to continue to the next incremental change. This &lt;em&gt;should not&lt;/em&gt; be
the developer clicking through their app and making sure everything looks good.
There are many awesome tools in place that allow for quick automated testing.
Here, we provide a walk through to jump start a web developer on using Python
and the selenium and behave libraries to provide a full browser test of their site.&lt;/p&gt;
&lt;h2 id=&#34;selenium&#34;&gt;Selenium&lt;/h2&gt;
&lt;p&gt;Selenium is a Python library that automates testing the final product of
a webpage. Selenium integrates with various browsers and replicates
the behavior that you expect from your users, all while measuring the
response to that behavior against your expectations for how the site, when
in its optimal state, should respond.
It is as easy to install as&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install selenium nose behave
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s start with a very simple example. Suppose you have webpage that
simply serves this up:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;title&lt;/span&gt;&amp;gt;WikiViz&amp;lt;/&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;body&lt;/span&gt;&amp;gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;h1&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;example&amp;#34;&lt;/span&gt;&amp;gt;Hello World!&amp;lt;/&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Even if you didn&amp;rsquo;t want to get fancy and set up a nice file structure and
orchestrate your testing with tools such as &lt;code&gt;behave&lt;/code&gt; and &lt;code&gt;nose&lt;/code&gt;, you
could simply create a very straight-forward python script that runs
the selenium testing you need to ensure that your page is serving
the expected content.&lt;/p&gt;
&lt;p&gt;If you are running these locally on your laptop, the following
step isn&amp;rsquo;t necessary, you will just need to make sure you have
Firefox installed. Selenium works with other browsers, but
to keep this simple at first, we will focus on Firefox.&lt;/p&gt;
&lt;h3 id=&#34;headless-on-ubuntu-skip-this-if-using-a-mac&#34;&gt;Headless on Ubuntu (skip this if using a Mac)&lt;/h3&gt;
&lt;p&gt;Skip this section if you don&amp;rsquo;t plan to run this on a remote
linux-based server. In this example, I&amp;rsquo;m using my Cloud 9 IDE
account which serves up containers with Ubuntu as the OS.&lt;/p&gt;
&lt;p&gt;First we need to isntall the &lt;a href=&#34;https://en.wikipedia.org/wiki/Xvfb&#34;&gt;Xvfb&lt;/a&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install firefox xvfb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and the PyVirtualDisplay python library:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install selenium nose behave PyVirtualDisplay
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, you&amp;rsquo;ll need the &lt;a href=&#34;https://github.com/mozilla/geckodriver/releases&#34;&gt;geckodriver&lt;/a&gt;
(they don&amp;rsquo;t include md5sums or rsa hashes to confirm authenticity, but use github
to host and release which comes with a great deal of trust):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://github.com/mozilla/geckodriver/releases/download/v0.21.0/geckodriver-v0.21.0-linux64.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar zxvf geckodriver-v0.21.0-linux64.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod a+x geckodriver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mv geckodriver /usr/local/bin/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;our-first-selenium-assertion&#34;&gt;Our first selenium assertion&lt;/h3&gt;
&lt;p&gt;Now we are ready for our first test. This test will
do two things. First, it will cause selenium to try
to access the webpage. If it can&amp;rsquo;t do so, it will fail.
This means that a selenium tests automatically tells
you whether or not your page is up and running right
out of the box. Secondly, the test will assert that
the very simple webpage example shown above is setting
the title to &amp;lsquo;WikiViz&amp;rsquo; as it should be.&lt;/p&gt;
&lt;p&gt;If you are using the headless on your remote server,
your code will look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;pyvirtualdisplay&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; Display
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;selenium&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; webdriver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;display &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Display(visible&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, size&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;display&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;start()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Firefox()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;http://localhost:8080/&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;assert&lt;/span&gt; driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;title &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;WikiViz&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;quit()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;display&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;stop()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are running this in a local environment, such as on
a Mac, and you like to watch selenium open the browser and
walk through the tests, then your code would look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;selenium&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; webdriver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;base_url &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;http://localhost:8080&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Firefox()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get(base_url)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;assert&lt;/span&gt; driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;title &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;WikiViz&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Yes, it is that easy! OK, well, at least for the title. As
your page gets more complicated, so will your testing, but
overall the spirit of simplicity in the selenium testing scheme
carries over. It&amp;rsquo;s the complexities of html/javascript that
you will eventually need to worry about. But we will keep things
simple here.&lt;/p&gt;
&lt;h3 id=&#34;expanding-the-tests&#34;&gt;Expanding the tests&lt;/h3&gt;
&lt;p&gt;In order to make our example just a little more
interesting, and give selenium something to &lt;em&gt;do&lt;/em&gt; rather than
just &lt;em&gt;observe&lt;/em&gt;, let&amp;rsquo;s add a button to our simple home page
that takes us to another page. Add the following just after
the h1 entry:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;form&amp;gt;
  &amp;lt;input type=&amp;#34;button&amp;#34; value=&amp;#34;results&amp;#34; onclick=&amp;#34;window.location.href=&amp;#39;/results&amp;#39;&amp;#34; /&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In this next section, I&amp;rsquo;m going to make the tests a little more
complicated in structure, but for a good payoff. If you like to
keep your tests in a single script as above, you can simply expand
on that script. Here, I will show a simple example using &lt;code&gt;nose&lt;/code&gt;
and &lt;code&gt;behave&lt;/code&gt; libraries. This example was inspired by a slightly more
complicated (and well done) example (which doesn&amp;rsquo;t have the headless feature)
&lt;a href=&#34;https://the-creative-tester.github.io/Python-Web-Browser-Automation-Behave/&#34;&gt;here&lt;/a&gt;,
but meant to be easier to dive into for those new to testing with selenium.&lt;/p&gt;
&lt;p&gt;Create a file structure that looks as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;env&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; tdj28:~/workspace/selenium_tests &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;master&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; $ tree .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── features
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── __init__.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── pages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   └── __init__.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── steps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       └── __init__.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── simple_examples
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └── xvfb_example.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;here&amp;rsquo;s some bash to make that happen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p selenium_tests/features
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir selenium_tests/pages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir selenium_tests/steps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir selenium_tests/simple_examples
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch selenium_tests/features/__init__.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch selenium_tests/pages/__init__.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch selenium_tests/steps/__init__.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;simple_examples&lt;/code&gt; directory is where I put in some simple scripts
for testing a few features (or writing this blog post), but you definitely
don&amp;rsquo;t want something that sloppy in a production version of your code.&lt;/p&gt;
&lt;p&gt;(Google &lt;code&gt;init python files&lt;/code&gt; if you don&amp;rsquo;t know what those &lt;code&gt;__init__.py&lt;/code&gt; files
are for.)&lt;/p&gt;
&lt;h3 id=&#34;step-one-define-the-behavior&#34;&gt;Step One: Define the Behavior&lt;/h3&gt;
&lt;p&gt;BDD development would have us define behaviors we expect of the site before
we even begin to develop site. That&amp;rsquo;s a good place to start for selenium testing
as well, where if these definitions are pre-existing, we can use them as our starting
point. If not, we can easily create our own.&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;features&lt;/code&gt; directory, create a file called &lt;code&gt;clickbutton.feature&lt;/code&gt; with
the following content:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Feature: ClickButton

  Scenario: Click Away From Homepage
    Given I navigate to the Home page
    And I see that the pagename is WikiViz
    And I see the header &amp;#34;Hello World!&amp;#34;
    When I click the button
    Then I see that the pagename is no longer WikiViz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is the beauty of the &lt;code&gt;behave&lt;/code&gt; library and behavior based testing in general.
We can use everyday language to describe our user&amp;rsquo;s experience, and then translate
that in to tests as we will see shortly. This enables non-technical folks to
contribute tests.&lt;/p&gt;
&lt;p&gt;Note that in the above tests, the last line entry is a bit of a cheat on my part.
The test really should, in that line, confirm in some way that it made it to the
results page. So don&amp;rsquo;t do what I did there! If for example you click on the button
and it takes you to a 404 error page, your test will still pass. I take that shortcut
here only to keep this jump start example focused on a single simple html page.&lt;/p&gt;
&lt;h3 id=&#34;step-two-turn-the-behaviors-into-steps&#34;&gt;Step Two: Turn the Behaviors Into Steps&lt;/h3&gt;
&lt;p&gt;In the steps folder, create a file called &lt;code&gt;clickbutton_step.py&lt;/code&gt;. Note that
it has the same prefix &lt;code&gt;clickbutton&lt;/code&gt; as the corresponding features file we
created above, that is required for each feature file. The contents of this
file will have:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;nose.tools&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; assert_equal, assert_not_equal, assert_true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;selenium.webdriver.common.by&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; By
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@given&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;I navigate to the Home page&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;step_impl&lt;/span&gt;(context):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;home_page&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;navigate(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;http://localhost:8080/&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@given&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;I see that the pagename is WikiViz&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;step_impl&lt;/span&gt;(context):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_equal(context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;home_page&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_page_title(), &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;WikiViz&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@given&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;I see the header &amp;#34;Hello World!&amp;#34;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;step_impl&lt;/span&gt;(context):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_equal(context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;home_page&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_page_header(), &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@when&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;I click the button&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;step_impl&lt;/span&gt;(context):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;home_page&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;click_button()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;@then&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;I see that the pagename is no longer WikiViz&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;step_impl&lt;/span&gt;(context):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_not_equal(context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;home_page&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_page_title(), &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;WikiViz&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So the pattern here is starting to become clear:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;User experience ---&amp;gt; Steps ---&amp;gt; Page functions
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We have chosen to create the steps before the page functions here because that is
a natural way to proceed. The steps will tell you what functions you need to create,
and then afterwards, create those functions with the narrow scope defined by
the steps.&lt;/p&gt;
&lt;h3 id=&#34;step-three-turn-the-steps-into-implemented-functions&#34;&gt;Step Three: Turn the Steps Into Implemented Functions&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s stick with our simple home page as detailed above. We
can look behind the curtain of this page by using our browser&amp;rsquo;s
developer console. On Chrome, for example, it is in settings &amp;gt; More Tools &amp;gt;
Developer Tools. This gives you many great tools to inspect
the code and help you locate elements in your code. For our
simple example, that isn&amp;rsquo;t so necessary, but as this example
is expanded to include javascript which makes the page more dynamic,
these developer tools become very useful. In this screenshot below,
for example, we see how it helps us identify elements of the code.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/devtools.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;These elements become key as we find key elements to use in our
testing.&lt;/p&gt;
&lt;p&gt;In the pages folder, create a file called &lt;code&gt;home_page.py&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from selenium.webdriver.common.by import By
from browser import Browser


class HomePage(Browser):
    # Home Page Actions

    def navigate(self, address):
        self.driver.get(address)

    def get_page_title(self):
        return self.driver.title

    def get_page_header(self):
        return self.driver.find_element_by_class_name(&amp;#34;example&amp;#34;).text

    def click_button(self, *locator):
        self.driver.find_element_by_class_name(&amp;#34;button&amp;#34;).click()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Because the source code of our simple page assigns the first and only
h1 header by giving it the class &amp;ldquo;example&amp;rdquo;, that makes it easy
to &lt;code&gt;find_element_by_class_name&lt;/code&gt;. If in fact we had multiple h1 elements
with that class, we would have to use the plural &lt;code&gt;find_elements_by_class_name&lt;/code&gt;
instead, which returns a list that we could submit for testing (e.g.
we would know what the first h1 should be, the second, etc.).&lt;/p&gt;
&lt;p&gt;So for our homepage, we have created the HomePage class, which inherits the
Browser class we created previously, and we define the actions we will
need on this page for testing. When we add other pages to our example
web app in later blog entries, we will create a new file in the pages
folder, one for each page. In this way, we keep the details nice and cleanly
compartmentalized. If we have a subset of pages that share much in common,
we can create a class for that subset, and then have individual pages
inherit that class, and so on.&lt;/p&gt;
&lt;p&gt;Also note that there are multiple ways we can identify elements, including
&lt;code&gt;xpath&lt;/code&gt;. In this file, we add four tools associated with our homepage.
The first is a navigate function, the second returns the pagename,
the third returns the h1 element, and
the fourth clicks on the button we just added that will send us to a new page.&lt;/p&gt;
&lt;h3 id=&#34;step-four-define-the-browser&#34;&gt;Step Four: Define The Browser&lt;/h3&gt;
&lt;p&gt;Before we can make use of the defined behaviors and expectations,
we need to set up our browser and display (for headless).&lt;/p&gt;
&lt;p&gt;Create the file &lt;code&gt;features/browser.py&lt;/code&gt; with the following content
if you want selenium to run on your laptop or desktop in a way
that you can watch it run through the tests:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;selenium&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; webdriver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;Browser&lt;/span&gt;(&lt;span style=&#34;color:#a2f&#34;&gt;object&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Firefox()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;implicitly_wait(&lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_page_load_timeout(&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;maximize_window()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;close&lt;/span&gt;(context):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here, I&amp;rsquo;ve made the page timeout ten seconds
because if my page is taking longer than ten seconds to load,
to me that is a pretty good reason for it to fail. I would actually
recommend you being more generous than not, and instead build in timing
features to test for load time rather than have the tests timeout as
an indication that your page is slow, but again, this is meant to be
a baseline example.&lt;/p&gt;
&lt;p&gt;For those wishing to use headless testing (on a remote server, no live
browser to watch), the above file will look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;selenium&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; webdriver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;pyvirtualdisplay&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; Display  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Comment this out for live browser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;BDisplay&lt;/span&gt;(&lt;span style=&#34;color:#a2f&#34;&gt;object&lt;/span&gt;): &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Comment this out for live browser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    display &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Display(visible&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, size&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;))  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Comment this out for live browser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    display&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;start()  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Comment this out for live browser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;stop&lt;/span&gt;(context): &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Comment this out for live browser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;display&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;stop() &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Comment this out for live browser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;Browser&lt;/span&gt;(&lt;span style=&#34;color:#a2f&#34;&gt;object&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Firefox()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;implicitly_wait(&lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_page_load_timeout(&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;maximize_window()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;close&lt;/span&gt;(context):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;driver&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;step-five-putting-it-all-together&#34;&gt;Step Five: Putting it all together&lt;/h3&gt;
&lt;p&gt;Finally, we need to have an environment definition to tie everything together.
This will tell &lt;code&gt;behave&lt;/code&gt; what page classes to import and tell it what to
do before and after the tests are ran.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;features&lt;/code&gt; folder, create a file called &lt;code&gt;environment.py&lt;/code&gt; with the content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;selenium&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; webdriver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;browser&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; BDisplay &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Comment this out for live browser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;browser&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; Browser
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;pages.home_page&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; HomePage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;before_all&lt;/span&gt;(context):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;display &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; BDisplay() &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Comment this out for live browser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;browser &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Browser()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;home_page &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; HomePage()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;after_all&lt;/span&gt;(context):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;browser&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    context&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;display&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;stop()  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Comment this out for live browser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the folder above features, assuming you&amp;rsquo;ve installed &lt;code&gt;behave&lt;/code&gt; via pip already,
simply run &lt;code&gt;behave&lt;/code&gt;. If all goes well, we get an output that indicates the tests
ran and their pass/fail status:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;env&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; tdj28:~/workspace/selenium_tests &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;master&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; $ behave
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Feature: ClickButton &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# features/clickbutton.feature:1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Scenario: Click Away From Homepage                  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# features/clickbutton.feature:3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Given I navigate to the Home page                 &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# features/steps/clickbutton_steps.py:4 0.112s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    And I see that the pagename is WikiViz            &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# features/steps/clickbutton_steps.py:8 0.005s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    And I see the header &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;               &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# features/steps/clickbutton_steps.py:12 0.046s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    When I click the button                           &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# features/steps/clickbutton_steps.py:16 0.112s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Then I see that the pagename is no longer WikiViz &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# features/steps/clickbutton_steps.py:20 0.009s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; feature passed, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; failed, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; skipped
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; scenario passed, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; failed, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; skipped
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt; steps passed, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; failed, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; skipped, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; undefined
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Took 0m0.283s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;find-the-code-here&#34;&gt;Find the code here&lt;/h3&gt;
&lt;p&gt;For your convenience, the selenium code is
collected &lt;a href=&#34;https://github.com/tdj28/wikiviz_demo_selenium/tree/20180826&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Using PNNL&#39;s new Cividis colormap in data science to make accessible heat maps</title>
      <link>https://3implieschaos.org/post/math_science/datasci/cividis-accessible-colormap-in-datascience/</link>
      <pubDate>Sun, 19 Aug 2018 19:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/math_science/datasci/cividis-accessible-colormap-in-datascience/</guid>
      
      <description>&lt;p&gt;Heat maps have become quite common in data science, and in science in general, and for good reason. For those who can see them, they succinctly summarize patterns in data. There are many color schemes used in the wild, with the Rainbow scheme being one of the more common ones.&lt;/p&gt;
&lt;p&gt;A group at &lt;a href=&#34;https://www.pnnl.gov/&#34;&gt;Pacific Northwest National Lab&lt;/a&gt; has recently published a &lt;a href=&#34;https://arxiv.org/pdf/1712.01662.pdf&#34;&gt;PLOS One article&lt;/a&gt; (hat tip &lt;a href=&#34;https://www.scientificamerican.com/article/end-of-the-rainbow-new-map-scale-is-more-readable-by-people-who-are-color-blind/&#34;&gt;Scientific American article&lt;/a&gt;) outlining their efforts to use mathematical modeling and the science of vision to create color maps for plots such that the exact same information is conveyed to those with and without color blindness.&lt;/p&gt;
&lt;p&gt;The goal of this blogpost is to demonstrate a quick way you can utilize their results in your own graphs (if you use Python). Interested readers can follow the links above for more detail on their methodology. What follows below is enough to get you off the ground using their Cividis colormap right away. Here is a sample of the difference one can get using Cividis:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/Cividis-heatmap-41643744.png&#34; alt=&#34;before and after&#34;&gt;&lt;/p&gt;
&lt;p&gt;The sample above is just a starting point. More sophisticated examples of the use of Cividis can be found in the corresponding library and the above reference article.&lt;/p&gt;
&lt;h2 id=&#34;installing-the-library&#34;&gt;Installing the Library&lt;/h2&gt;
&lt;aside aria-label=&#34;note&#34; class=&#34;note&#34;&gt;
  &lt;div&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;UPDATE Sep 13 2018:&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The PR has been merged and you can just install with &lt;code&gt;pip install cmaputil&lt;/code&gt; without having to pull the branch.&lt;/p&gt;
  &lt;/div&gt;
&lt;/aside&gt;
&lt;p&gt;PNNL&amp;rsquo;s &lt;code&gt;cmaputil&lt;/code&gt; library can be downloaded from their &lt;a href=&#34;https://github.com/pnnl/cmaputil&#34;&gt;github&lt;/a&gt; page or installed via &lt;code&gt;pip install cmaputil&lt;/code&gt;. However, for the use cases I&amp;rsquo;m showing here, that won&amp;rsquo;t quite work. &lt;a href=&#34;https://github.com/pnnl/cmaputil/pull/3&#34;&gt;This PR&lt;/a&gt; shows why. If that PR has been merged, or an alternative fix merged, you should be able to use the library from the source. If not, here is a quick work around:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/tdj28/cmaputil
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git checkout -b patch-1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;cd&lt;/span&gt; cmaputil
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python setup.py install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Assuming that works, you can now use the camputil library to use optimized Cividis colormaps.&lt;/p&gt;
&lt;h2 id=&#34;using-cividis&#34;&gt;Using Cividis&lt;/h2&gt;
&lt;p&gt;We would start by importing the key libraries:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;cmaputil&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;cmu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;cmaputil.cvdutil&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;cvu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;scipy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, add the following section to your code. It modifies
the viridis colormap that comes with matplotlib and runs
some optimizations on it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Input colormap nam&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmap &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;viridis&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Optimize&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rgb1, jab1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; cmu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_rgb_jab(cmap) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Original colormap&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rgb2, jab2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; cmu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_rgb_jab(cvu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_cvd(rgb1)) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# CVD colormap&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jab3 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; cmu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;make_linear(jab2) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Uniformize hue (a&amp;#39; vs. b&amp;#39;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;#print(jab3)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_, jab4 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; cmu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;correct_J(jab3) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Linearize J&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Convert back to sRGB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rgb4 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; cmu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;convert(jab4, cmu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;CSPACE2, cmu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;CSPACE1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rgb4 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;clip(rgb4, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Resimulate CVD in case corrections took the map outside CVD-safe space&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rgb4 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; cvu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_cvd(rgb4)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Resimulate CVD in case corrections took the map outside CVD-safe space&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rgb4 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; cvu&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get_cvd(rgb4)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;colors &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#a2f&#34;&gt;len&lt;/span&gt;(rgb4[&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;])):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    colors&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append( (rgb4[&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;][j],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 rgb4[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;][j],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 rgb4[&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;][j]) )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Convert to matplotlib colormap&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cividis &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; mpl&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;colors&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;LinearSegmentedColormap&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;from_list(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, colors)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, you can easily incorporate it into your matplotlib plots as in the following example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;clf()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fig &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;  plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Cividis Heatmap&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;im &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;imshow(heatmap, extent&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;extent, cmap&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;cividis, origin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;lower&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fig&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;colorbar(im)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;savefig(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Cividis Heatmap&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can compare the rainbow version of the above plot:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/Cividis-heatmap-5ca3f3e1.png&#34; alt=&#34;rainbow version&#34;&gt;&lt;/p&gt;
&lt;p&gt;with the Cividis version:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/Cividis-heatmap-69d2bb6c.png&#34; alt=&#34;civids version&#34;&gt;&lt;/p&gt;
&lt;p&gt;It certainly may be a matter of preference for most folks. I find the Cividis version more appealing, for example, because although the dark reds pop to me and pinpoint &amp;ldquo;hot spots&amp;rdquo; perhaps a little more quickly, they appear to be almost detached from the rest of the heat blob. In the Cividis mapping, as in other mappings which have only two colors, the spectrum is clearer. Given that using Cividis ensures that any color blind readers will be getting the same information as I see seals the deal for me and makes Cividis my go to choice for colormaps going forward.&lt;/p&gt;
&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cividis is an optimized version of the viridis colormap which optimizes for both the ability to discern patterns for those with normal vision and the ability of the color blind to see the exact same thing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cividis works in Python and they also have an R library. This quick blog note shows how to use it &lt;em&gt;right now&lt;/em&gt;, but I anticipate and hope that it will become obsolete and matplotlib will incorporate Cividis and PNNL&amp;rsquo;s work on this. COMSOL Multiphysics, a finite element analysis software package, for example, will be doing so.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can find a standalone python script which I used to create these plots using Cividis &lt;a href=&#34;https://github.com/3implieschaos/various/blob/master/2018/20180819/heatmap.py&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Exploring Wikipedia Page Count Trends</title>
      <link>https://3implieschaos.org/post/math_science/datasci/exploring-wikipedia-page-counts-trends/</link>
      <pubDate>Sun, 05 Aug 2018 19:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/math_science/datasci/exploring-wikipedia-page-counts-trends/</guid>
      
      <description>&lt;h1 id=&#34;exploring-wikipedia-page-counts-via-additive-models-for-seasonality-decomposition&#34;&gt;Exploring Wikipedia page counts via additive models for seasonality decomposition&lt;/h1&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Wikipedia, in addition to being quite valuable as a &lt;em&gt;starting&lt;/em&gt; point for many student essays (as somebody who has spent time in front of the classroom, I can&amp;rsquo;t emphasize the word &lt;em&gt;starting&lt;/em&gt; enough here), can provide some sociological insight by providing page count hits. In this brief blog entry, we will explore two python-ready implementations of additive models for seasonality decomposition in the context of the following topic:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is there any seasonality with wikipedia page hits? For this question, we will look at a few keywords which we think are quite often used by school students in researching for common essay questions (e.g. Abraham_Lincoln) and other keywords which are less likely to be commonly used by students for essays at any level, for example, the American telecommunications company Sprint.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This blog entry is posted in the form of a Jupyter Notebook so that readers can recreate the findings and pursue further questions more easily.&lt;/p&gt;
&lt;p&gt;We use two &lt;em&gt;additive model&lt;/em&gt; implementations, one from a library called &lt;a href=&#34;https://www.statsmodels.org/stable/index.html&#34;&gt;statsmodel&lt;/a&gt; and another from a library developed by Facebook called &lt;a href=&#34;https://facebook.github.io/prophet/&#34;&gt;prophet&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;additive-models-for-seasonality-decomposition-a-quick-primer&#34;&gt;Additive models for seasonality decomposition, a quick primer&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s begin by creating a artificial time series.&lt;/p&gt;
&lt;p&gt;Before importing pandas, numpy, etc., I want to turn off some typical warnings that we see from these libraries. This is just to keep the output looking clean for presentation purposes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;warnings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;warnings&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;, message&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;numpy.dtype size changed&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;warnings&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;, message&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;numpy.ufunc size changed&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;warnings&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;,category&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d2413a;font-weight:bold&#34;&gt;FutureWarning&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we import all of the great Python libraries. Here, for seasonal decomposition we are using statsmodel and Facebook&amp;rsquo;s Prophet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;pandas&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;pd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;numpy&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;matplotlib.pylab&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;datetime&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;%&lt;/span&gt;matplotlib inline
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;matplotlib.pylab&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; rcParams
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;seaborn&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;sns&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;statsmodels.tsa.stattools&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; adfuller
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;statsmodels.tsa.seasonal&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; seasonal_decompose
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;fbprophet&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; Prophet
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rcParams[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;figure.figsize&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, let&amp;rsquo;s create a fake data set.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;entries &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Two years worth of days&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;DataFrame(np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;randn(entries))&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;cumsum()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;head()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(df[&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;tolist())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;show()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_7_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Our brains have pattern-matching algorithms trained over billions of years, so even though the above data set is a random walk, we may see patterns there anyway. If we run it again, those patterns will change even though we were using the exact same algorithm to generate them. This of course doesn&amp;rsquo;t imply that finding patterns in data is an empty task, there is very often patterns that are legitimate. The point here is to show how the additive model works by throwing something known to be random at it. Just to show, again, how entirely random the generated dataset is, let&amp;rsquo;s throw a bunch in the same graph:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;rwts&lt;/span&gt;(entries&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;100&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;DataFrame(np&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;randn(entries))&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;cumsum()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    start &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;20160101&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;%Y&lt;/span&gt;&lt;span style=&#34;color:#b68;font-weight:bold&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;%m&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dates_generated &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; [start &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; datetime&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;timedelta(days&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;x) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, entries)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dtse &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Series(dates_generated)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ds&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; dtse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _df[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ds&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; _df
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;entries &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Two years worth of days&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rwdf &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rwdf&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append(rwts(entries))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(rwdf[i][&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;#.tolist())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;show()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_10_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next, let&amp;rsquo;s see what happens when we apply the statsmodel implementation of the additive model to a random walk dataset:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;additive_seasonal_plot&lt;/span&gt;(_df, frequency&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;, title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;I forgot to tinclude a title.&amp;#34;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fig, ax &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplots()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;title(title)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    decompositionm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; seasonal_decompose(_df, freq&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;frequency, model&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;additive&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    trendm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; decompositionm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;trend
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    seasonalm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; decompositionm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;seasonal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    residualm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; decompositionm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;resid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#666&#34;&gt;411&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(_df, label&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Original&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#666&#34;&gt;412&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(trendm, label&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Trend&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#666&#34;&gt;413&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(seasonalm,label&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Seasonality&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#666&#34;&gt;414&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(residualm, label&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Residuals&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;tight_layout()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;additive_seasonal_plot(rwts(&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;)[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;], frequency&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;, title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Random Walk&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_13_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now let&amp;rsquo;s try that with Prophet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;prophet_seasonal_plot&lt;/span&gt;(_df, frequency&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;, mytitle&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;I forgot to tinclude a title.&amp;#34;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _m &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Prophet(yearly_seasonality &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;, daily_seasonality&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;False&lt;/span&gt;, weekly_seasonality &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;, mcmc_samples &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, seasonality_prior_scale&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;mytitle)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;fit(_df)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _future &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;make_future_dataframe(periods&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _forecast &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;predict(future)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot_components(_forecast);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(_forecast);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prophet_seasonal_plot(rwts(&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;), frequency&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;, mytitle&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Random Walk&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_16_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_16_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_16_2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Prophet makes nicer graphs out of the box, for sure. It also has a nice way to show uncertainty. And looking at the above, you might very well believe that indeed we have found some sort of phenomenon that seems to peak in late winter and spring, and on Thursday for some reason. It would be a pretty safe bet to bet that the above trend would peak in the months following the last dataset we have, right? Wrong, of course, because as you know, this dataset was generated entirely randomly. The lesson here is not that this method for modeling seasonality and forecasting is wrong, as indeed they work exactly as they are designed to, but instead that we need to be quite careful not to so readily believe what they say. This is the giant grain of salt I&amp;rsquo;m putting on your plate before getting to the fun stuff.&lt;/p&gt;
&lt;p&gt;To make this point entirely visual, let&amp;rsquo;s do the same analysis as above, but instead of just using two years worth of fake data, let&amp;rsquo;s create three years, but only feed the additive model two years, and see how it does in the third year.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; rwts(&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mask1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (df1[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ds&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20160101&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt; (df1[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ds&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20180101&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; df1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;loc[mask1]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mask2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (df1[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ds&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20180101&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt; (df1[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ds&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20190101&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df3 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; df1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;loc[mask2]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_m &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Prophet(yearly_seasonality &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;, daily_seasonality&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;False&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             weekly_seasonality &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;, mcmc_samples &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, seasonality_prior_scale&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;fit(df2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_future &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;make_future_dataframe(periods&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_forecast &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;predict(future)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(_forecast);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_18_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;That looks great, that stock is about to go up like crazy, let&amp;rsquo;s dump our entire life-savings into that stock!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(_forecast);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df3[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(color&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Red&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x7f7fbe8d1048&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_20_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Oops.&lt;/p&gt;
&lt;h2 id=&#34;wikipedia-page-hit-stats&#34;&gt;Wikipedia Page hit stats&lt;/h2&gt;
&lt;p&gt;Previously, in order to get a nice way to access Wikipedia page hit data, I would have suggsted the R library wikipediatrend. The situation has evolved such that wikipediatrend is not functional (see &lt;a href=&#34;https://github.com/petermeissner/wikipediatrend/issues/32&#34;&gt;this link for more details&lt;/a&gt;). Fortunately, Wikimedia themselves have released an api that has a &lt;a href=&#34;https://github.com/mediawiki-utilities/python-mwviews&#34;&gt;python library&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;mwviews.api&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; PageviewsClient
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; PageviewsClient(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;blog&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Although there is a &lt;a href=&#34;https://dumps.wikimedia.org/other/pagecounts-raw/&#34;&gt;repository&lt;/a&gt; of old pageviews pre-dating July 2015, the API only provides dates from July 2015 forward. Let&amp;rsquo;s get three years worth of data from July 2015 to July 2018. The following command outputs a dictionary with items of the form:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; datetime.datetime(2015, 12, 21, 0, 0): {&amp;#39;Lincoln&amp;#39;: 503},
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;when we make a call to extract page hit counts for the topic &amp;lsquo;Abraham Lincoln&amp;rsquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dictLincoln &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;article_views(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;en.wikipedia&amp;#39;&lt;/span&gt;, [&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Abraham Lincoln&amp;#39;&lt;/span&gt;], granularity&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;, start&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20150701&amp;#39;&lt;/span&gt;, end&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20180701&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dfLincoln &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;DataFrame&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;from_dict(dictLincoln)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;transpose()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dfLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;to_datetime(dfLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dfLincoln &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; dfLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Abraham_Lincoln&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Daily Page Counts&amp;#34;&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dfLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;head()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Daily Page Counts&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-01&lt;/th&gt;
      &lt;td&gt;15223&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-02&lt;/th&gt;
      &lt;td&gt;15137&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-03&lt;/th&gt;
      &lt;td&gt;17291&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-04&lt;/th&gt;
      &lt;td&gt;19697&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-05&lt;/th&gt;
      &lt;td&gt;18149&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Do we see any trends just by glancing at the plot of these page hits over the three year period from July 2015 to July 2018? Initially we may see a few, such as that the page hits seem to go up after January, and have some unusual peaks in late 2016 and early 2017 (very likely, and precisely as we will see later, related to the election and inauguration of that period).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dfLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Abraham Lincoln Wiki Page Hits&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x7f7fc8603a90&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_29_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;In fact, let&amp;rsquo;s plot key dates on that plot, such as the US election of 2016, inauguration of 2017, President&amp;rsquo;s Day holidays, and the 4th of July. These key dates explain almost all of the spikes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; dfLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Abraham Lincoln Wiki Page Hits + Key dates&amp;#34;&lt;/span&gt;, linewidth&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3.0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;important_dates &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-11-08&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-01-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-02-15&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-02-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-02-19&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-07-04&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; xc &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; important_dates:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvline(x&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;xc, color&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;, linestyle&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;--&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_xlim(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-01-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-03-01&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_ylim(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;90000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(0, 90000)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_31_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next we apply statsmodel&amp;rsquo;s implementation of the additive model for seasonal decomposition:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fig, ax &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplots()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Seasonal trend for Wiki Page Counts: Abraham Lincoln&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;decompositionm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; seasonal_decompose(dfLincoln, freq&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;, model&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;additive&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;trendm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; decompositionm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;trend
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seasonalm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; decompositionm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;seasonal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;residualm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; decompositionm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;resid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#666&#34;&gt;411&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(dfLincoln, label&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Original&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#666&#34;&gt;412&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(trendm, label&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Trend&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#666&#34;&gt;413&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(seasonalm,label&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Seasonality&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#666&#34;&gt;414&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(residualm, label&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Residuals&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;tight_layout()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_33_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;This model has identified a trend increase in election year 2016, which seems to make sense. However, it overfit the spike seen around election day 2016, and we can see the result of that overfit in the residuals which dip extremely a year before and after election day. In a future blog post, we will look at working around this by marking the key dates as holidays so that the algorithm doesn&amp;rsquo;t overfit those days. The seasonality trend has also found something pretty expected, which is that hits on that page seem to breathe with the typical American school year. That is, we can see in the seasonal trends that there are many students using Wikipedia (hopefully as a starting point and not a primary resource) for essay papers and homework answers on Abraham Lincoln.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; seasonalm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Abraham Lincoln Wiki Page Hits Seasonal Trend + Key dates + Shaded School Year&amp;#34;&lt;/span&gt;, linewidth&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3.0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;important_dates &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-11-08&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-01-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-02-15&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-02-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-02-19&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-12-25&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-12-25&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-12-25&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-07-04&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; xc &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; important_dates:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvline(x&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;xc, color&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;, linestyle&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;--&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvspan(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-09-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-06-01&amp;#39;&lt;/span&gt;), facecolor&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvspan(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-09-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-06-01&amp;#39;&lt;/span&gt;), facecolor&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvspan(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-09-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-06-01&amp;#39;&lt;/span&gt;), facecolor&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_xlim(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-07-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-03-01&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_ylim(&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;10000&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;40000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(-10000, 40000)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_35_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Zooming in on the residuals, we see again how the overfitting to the special events (election and inauguration) hurt the accuracy of the models.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; residualm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Abraham Lincoln Wiki Page Hits Seasonal Residuals + Key dates&amp;#34;&lt;/span&gt;, linewidth&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3.0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;important_dates &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; [ &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-01-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-11-08&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-01-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-11-08&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; xc &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; important_dates:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvline(x&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;xc, color&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;, linestyle&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;--&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_xlim(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-12-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-02-01&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_ylim(&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;40000&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;40000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(-40000, 40000)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_37_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now we have stated a hypothesis without backing it up, namely that the seasonality over the year in page hits for the Wikipedia entry for Abraham Lincoln reflects the patterns of the American school year. This is pretty impossible to prove without data that is impossible or not practical to obtain, namely we would have to have the IP addresses of all those page hits and tie those in to schools and households with students, etc. Never going to happen. But we can strengthen our confidence in our hypothesis by testing it in the negative, that is, what will we see if we pick a topic which we do &lt;em&gt;not&lt;/em&gt; expect to be tied to school-year patterns, a topic students would rarely ever look up for school work? Let&amp;rsquo;s try the American telecom Sprint.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;get_wiki_df&lt;/span&gt;(topic, ymin, ymax):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _dict &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;article_views(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;en.wikipedia&amp;#39;&lt;/span&gt;, [topic], granularity&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;, start&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20150701&amp;#39;&lt;/span&gt;, end&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20180701&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;DataFrame&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;from_dict(_dict)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;transpose()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;to_datetime(_df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{topic: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Daily Page Counts&amp;#34;&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#b68;font-weight:bold&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt; Wiki Page Hits + Key dates + Shaded School Year&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;format(topic), linewidth&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3.0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    important_dates &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-11-08&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-01-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-02-15&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-02-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-02-19&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-12-25&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-12-25&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-12-25&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-07-04&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; xc &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; important_dates:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvline(x&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;xc, color&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;, linestyle&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;--&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvspan(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-09-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-06-01&amp;#39;&lt;/span&gt;), facecolor&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvspan(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-09-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-06-01&amp;#39;&lt;/span&gt;), facecolor&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvspan(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-09-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-06-01&amp;#39;&lt;/span&gt;), facecolor&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_xlim(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-07-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-03-01&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_ylim(ymin, ymax)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; _df
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;get_wiki_seasonal&lt;/span&gt;(topic, ymin, ymax):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _dict &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;article_views(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;en.wikipedia&amp;#39;&lt;/span&gt;, [topic], granularity&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;, start&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20150701&amp;#39;&lt;/span&gt;, end&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20180701&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;DataFrame&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;from_dict(_dict)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;transpose()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;to_datetime(_df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{topic: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Daily Page Counts&amp;#34;&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    decompositionm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; seasonal_decompose(_df, freq&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;, model&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;additive&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    seasonalm &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; decompositionm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;seasonal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; seasonalm&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#b68;font-weight:bold&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt; Wiki Page Hits Seasonal Trend + Key dates + Shaded School Year&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;format(topic), linewidth&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3.0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    important_dates &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-11-08&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-01-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-02-15&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-02-20&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-02-19&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-12-25&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-12-25&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-12-25&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-07-04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-07-04&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; xc &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; important_dates:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvline(x&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;xc, color&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;, linestyle&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;--&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvspan(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-09-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-06-01&amp;#39;&lt;/span&gt;), facecolor&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvspan(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2016-09-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-06-01&amp;#39;&lt;/span&gt;), facecolor&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;axvspan(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2017-09-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-06-01&amp;#39;&lt;/span&gt;), facecolor&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_xlim(pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2015-07-01&amp;#39;&lt;/span&gt;), pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Timestamp(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;2018-03-01&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ax&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_ylim(ymin, ymax)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; _df
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;get_wiki_df(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Sprint&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;400&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;get_wiki_seasonal(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Sprint&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;400&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_40_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_40_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;The seasonality trend is scarred by incorporating a singular spike in data (the additive model tries to balance bias and variance, but obviously both can break at the same time), but we see no pattern tied to the school year. (One flaw is that the hits on the Sprint wiki page are much lower to begin with, so it isn&amp;rsquo;t as reliable of a statement.) Let&amp;rsquo;s try another topic which we suspect should breathe with the school year, US President George Washington.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;get_wiki_df(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;George Washington&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;80000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;get_wiki_seasonal(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;George Washington&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20000&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;60000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_42_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_42_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;The trend here is less pronounced, but still evident. While we are on the topic, we present below, without commentary, a comparison on page hits between Donald Trump and Bill Clinton. I present both on the same scale to show the extraordinary difference in the magnitude of public interest in each individual.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;get_wiki_df(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Donald Trump&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;7000000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;get_wiki_seasonal(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Donald Trump&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;200000&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;5000000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_44_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_44_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;get_wiki_df(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Bill Clinton&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;7000000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ax&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;get_wiki_seasonal(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Bill Clinton&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;200000&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;5000000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_45_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_45_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s make use of Prophet now, because it has nicer graphs and seems a little more robust in my limited usage so far. We&amp;rsquo;ve used it above, but I will walk through a little more slowly this time. First we must create a Prophet object, and fit our dataframe to Prophet such that there is a datetime column labeled ds, and the counts value column is relabeled y.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Prophet(yearly_seasonality &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;, weekly_seasonality &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;, mcmc_samples &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, seasonality_prior_scale&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;proLincoln &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; dfLincoln
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;proLincoln[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ds&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; dfLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;proLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;head()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Daily Page Counts&lt;/th&gt;
      &lt;th&gt;ds&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-01&lt;/th&gt;
      &lt;td&gt;15223&lt;/td&gt;
      &lt;td&gt;2015-07-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-02&lt;/th&gt;
      &lt;td&gt;15137&lt;/td&gt;
      &lt;td&gt;2015-07-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-03&lt;/th&gt;
      &lt;td&gt;17291&lt;/td&gt;
      &lt;td&gt;2015-07-03&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-04&lt;/th&gt;
      &lt;td&gt;19697&lt;/td&gt;
      &lt;td&gt;2015-07-04&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-05&lt;/th&gt;
      &lt;td&gt;18149&lt;/td&gt;
      &lt;td&gt;2015-07-05&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;proLincoln &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; proLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Daily Page Counts&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;proLincoln&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;head()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;y&lt;/th&gt;
      &lt;th&gt;ds&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-01&lt;/th&gt;
      &lt;td&gt;15223&lt;/td&gt;
      &lt;td&gt;2015-07-01&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-02&lt;/th&gt;
      &lt;td&gt;15137&lt;/td&gt;
      &lt;td&gt;2015-07-02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-03&lt;/th&gt;
      &lt;td&gt;17291&lt;/td&gt;
      &lt;td&gt;2015-07-03&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-04&lt;/th&gt;
      &lt;td&gt;19697&lt;/td&gt;
      &lt;td&gt;2015-07-04&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2015-07-05&lt;/th&gt;
      &lt;td&gt;18149&lt;/td&gt;
      &lt;td&gt;2015-07-05&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;fit(proLincoln)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;INFO:fbprophet.forecaster:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.
/home/d7082791602/.local/lib/python3.6/site-packages/pystan/misc.py:399: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  elif np.issubdtype(np.asarray(v).dtype, float):





&amp;lt;fbprophet.forecaster.Prophet at 0x7f7fbdf32cc0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;future &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;make_future_dataframe(periods&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;forecast &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;predict(future)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;forecast&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;head()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot_components(forecast);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(forecast);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_50_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_50_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here we see that prophet also very nicely picks out the 2016 trend, and clearly picks out the school year trend as well as the weekday trend. In order to make these quick peaks at the data more systematic, we create and use the following function. We then use these functions to take a look at a varied array of Wikipedia pages and conjecture a bit about the results.&lt;/p&gt;
&lt;p&gt;The first one we take a look at is &amp;ldquo;Christmas&amp;rdquo; which we expect, and indeed find, has a very clean seasonality. Note the weekday trend line shows a preference for some days over others, which is an artifact simply of which day the holiday fell on in the years that are used for training (since this holiday doesn&amp;rsquo;t fall on any particular weekday by design, and we only trained based on three years, those three days in occured on, or rather Christmas Eve, will see the bias. That would be Thursday/Friday 2015, Sunday/Monday 2016, and Monday/Tuesday 2017 [2016 was a leap year]).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;prophet_wiki_df&lt;/span&gt;(topic, starting&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20150701&amp;#39;&lt;/span&gt;, ending&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20180804&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _m &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Prophet(yearly_seasonality &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;, daily_seasonality&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;False&lt;/span&gt;, weekly_seasonality &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;, mcmc_samples &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, seasonality_prior_scale&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _dict &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;article_views(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;en.wikipedia&amp;#39;&lt;/span&gt;, [topic], granularity&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;, start&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;starting, end&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;ending);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;DataFrame&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;from_dict(_dict)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;transpose()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;to_datetime(_df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(title&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#b68;font-weight:bold&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt; Wikipedia Page Hit Counts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;format(topic))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;{topic&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;): &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _df[&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ds&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _df&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;index
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;fit(_df)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _future &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;make_future_dataframe(periods&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _forecast &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;predict(future)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot_components(_forecast);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _m&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;plot(_forecast);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prophet_wiki_df(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Christmas&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_53_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_53_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_53_2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now let&amp;rsquo;s look at something that shouldn&amp;rsquo;t really have too much seasonality, the term eclipse. Eclipses happen on a regular basis, of course, and physics predicts them extremely accurately, but human observation of eclipses happens irregularly. Here we can see that the major eclipse event of 2017 is so strongly represented in the data that it ends of defining the very inacurate model that results.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prophet_wiki_df(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Eclipse&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_55_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_55_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_55_2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can see the fading of pop culture stars, such as the declining trend with Beyonce. Again, we see that the none of the output here is very trustworthy except perhaps the overall trend. Events such as awards ceremonies, album releases, and gossip events result in spikes which then dominate the seasonality models.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prophet_wiki_df(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Beyoncé&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_61_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_61_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_61_2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Returning to our theme above that some wiki topics breathe with the school year, electron is surely one of those topics.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prophet_wiki_df(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Electron&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_63_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_63_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/assets20180805/output_63_2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;Statistical tools for seasonal decomposition are a great start in trying to predict time series which have some predictability built in. For topics that have a much greater stochastic characteristic, these tools become much more difficult to use properly. Blog entries here will continue to explore these tools and go into greater detail about the math behind them and how to use the tools in more sophisticated ways. Initial impressions from this exploration here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;There are some time series which are nearly perfectly predictable, such as that for the page hits on the topic of Christmas, which is an event that happens once per year and is limited in scope to a small minority of weeks in the entire year.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other trends are fairly predictable, such as electron, because of its association with school work and the predictable seasonality of school. Interestingly, the trends one finds with topics like this show the &amp;ldquo;hit&amp;rdquo; that the holiday break seems to have on education, where the end of year break is preceeded with a sort of winding down and then followed by a winding up, both of which are not particularly rapid.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trends that have an educational component, such as popular US Presidents like Abraham Lincoln, are complicated by holidays such as president&amp;rsquo;s day, elections, and inaugurations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trends from pop culture, such as Beyonce, can possibly trace the popularity of a celebrity but, are complicated by things such as album releases, awards ceremonies, gossip outbreaks, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sometimes, a massive surge in interest in a topic due to some even can entirely throw off seasonal decomposition, and such events will have to be &amp;lsquo;windowed out&amp;rsquo; and interpolated to get an accurate picture of the routine behavior of the time series.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some topics show the decline in interest in the topic in general, or in some cases, an increasing normalization of a topic such that it gets less page views over time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some topics are so random that speaking about trends and seasonality is nonsense. However, these models can easily overfit that data and give you a false sense of confidence that will inevitably be proven wrong.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>A Risk Analysis Bowtie Diagram in Latex</title>
      <link>https://3implieschaos.org/post/tech/devops/risk-analysis-bowtie-diagram-latex/</link>
      <pubDate>Sun, 24 Jun 2018 19:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/tech/devops/risk-analysis-bowtie-diagram-latex/</guid>
      
      <description>&lt;h3 id=&#34;bowtie-diagram-in-latex&#34;&gt;Bowtie Diagram in LaTeX&lt;/h3&gt;
&lt;p&gt;For folks who have to conduct risk analysis, there are
very limited choices for the creation of &amp;ldquo;bowtie diagrams&amp;rdquo;.
Searching the web for examples in LaTeX comes up pretty empty.
So when googling comes up empty, its time to create:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/3implieschaos/latex-demos/blob/master/figures/bowtie/bowtie.tex&#34;&gt;Bowtie diagram in LaTeX example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This code results in a diagram that looks pretty acceptable
in terms of quality, or at least an acceptable starting point:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/bowtie.png&#34; alt=&#34;bowtie diagram&#34;&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>TRAPPIST-1 is probably not alive</title>
      <link>https://3implieschaos.org/post/math_science/astro/trappist1-is-probably-not-alive/</link>
      <pubDate>Fri, 24 Feb 2017 19:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/math_science/astro/trappist1-is-probably-not-alive/</guid>
      
      <description>&lt;script&gt;
    document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
        renderMathInElement(document.body, {
            delimiters: [
                {left: &#34;$$&#34;, right: &#34;$$&#34;, display: true},
                {left: &#34;$&#34;, right: &#34;$&#34;, display: false}
            ]
        });
    });
&lt;/script&gt;

&lt;aside aria-label=&#34;note&#34; class=&#34;note&#34;&gt;
  &lt;div&gt;
&lt;pre&gt;&lt;code&gt;UPDATE July 23 2022:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The JWST has taken spectrographic readings of the TRAPPIST system. We will update this blog entry with any key findings when they are released.
It will be of great interest if JWST detects atmosphere and water on any of the TRAPPIST planets in the habitable zone.&lt;/p&gt;
  &lt;/div&gt;
&lt;/aside&gt;
&lt;aside aria-label=&#34;note&#34; class=&#34;note&#34;&gt;
  &lt;div&gt;
&lt;pre&gt;&lt;code&gt;UPDATE Aug 10 2021:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An &lt;a href=&#34;https://academic.oup.com/mnras/article-abstract/507/2/1723/6339287?redirectedFrom=fulltext&amp;amp;login=false&#34;&gt;article&lt;/a&gt; (&lt;a href=&#34;https://arxiv.org/abs/2108.01917&#34;&gt;preprint&lt;/a&gt;, &lt;a href=&#34;https://ui.adsabs.harvard.edu/abs/2021MNRAS.507.1723I/abstract&#34;&gt;NASA ADS&lt;/a&gt;) in the &lt;em&gt;Monthly Notices of the Royal Astronomical Society&lt;/em&gt; suggests that ultra-cool dwarf stars are &lt;a href=&#34;https://skyandtelescope.org/astronomy-news/red-dwarfs-arent-so-bad-for-planets-after-all/&#34;&gt;potentially not as deadly as first thought&lt;/a&gt;. The article suggests that the flaring tends to happen at higher latitudes on the star, which would result in such flares to tend to be directed away from the planets which are located closer to the equatorial plane of the star. Should this prove to be accurate, then that would soften the skepticism we displayed in the earlier version of this blog in regards to stars of this type hosting life, although the other causes of skepticism still remain high.&lt;/p&gt;
  &lt;/div&gt;
&lt;/aside&gt;
&lt;h2 id=&#34;quick-overview&#34;&gt;Quick overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It was recently announced that a nearby star, TRAPPIST-1,
has been found to have additional planets (some were discovered prior to this study)
which exist in a potentially
life-hosting region around the star.&lt;/li&gt;
&lt;li&gt;[OLD TEXT] Astronomically speaking, TRAPPIST-1 is pretty close to
us and thus if it does host life then it will be a promising
candidate for spectrographic evidence. [SEE UPDATE ABOVE]&lt;/li&gt;
&lt;li&gt;[OLD TEXT] However, the nature of the star and the configuration of
the planets means that there are some good reasons to be
skeptical that any of those planets do host life. [SEE UPDATE ABOVE]&lt;/li&gt;
&lt;li&gt;Also, it is practically impossible with our current
technology to visit that system with unmanned probes,
let alone (hu)maned missions.&lt;/li&gt;
&lt;li&gt;The distances in space are so vast and the restrictions
that the laws of Physics place on space travel are so stringent
that we would probably have to completely exploit our entire
planet&amp;rsquo;s resources to even have a chance to visit that solar
system within 10,000 years.&lt;/li&gt;
&lt;li&gt;We are probably not alone in the universe, but we are
also probably very, very rare, and we likely won&amp;rsquo;t meet
any alien intelligence before we go extinct.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;deeper-dive&#34;&gt;Deeper Dive&lt;/h2&gt;
&lt;p&gt;An &lt;a href=&#34;http://nature.com/articles/doi:10.1038/nature21360&#34;&gt;article published in the science journale &lt;em&gt;Nature&lt;/em&gt;&lt;/a&gt;
(Gillon et al., &lt;em&gt;Nature&lt;/em&gt;, &lt;strong&gt;542&lt;/strong&gt;, February 23, 2017) made many mainstream media
headlines by announcing the discovery of new terestrial planets around a nearby
star. &lt;strong&gt;CNN&lt;/strong&gt; was pretty tame by &lt;a href=&#34;http://www.cnn.com/2017/02/22/world/new-exoplanets-discovery-nasa/&#34;&gt;announcing&lt;/a&gt; that &lt;em&gt;Astronomers discover 7 Earth-sized planets orbiting nearby star&lt;/em&gt; in their headline. The &lt;strong&gt;New York Times&lt;/strong&gt; was
equally tame in &lt;a href=&#34;https://www.nytimes.com/2017/02/22/science/trappist-1-exoplanets-nasa.html?_r=0&#34;&gt;announcing&lt;/a&gt; that &lt;em&gt;7 Earth-Size Planets Orbit Dwarf Star, NASA and European Astronomers Say&lt;/em&gt;. &lt;strong&gt;NBC&lt;/strong&gt; went a little
louder with the &lt;a href=&#34;http://www.nbcnews.com/mach/space/living-trappist-1-planets-would-be-very-strange-n725206&#34;&gt;headline&lt;/a&gt;
&lt;em&gt;Living on the TRAPPIST-1 Planets Would Be Very Strange&lt;/em&gt;, which, let&amp;rsquo;s be clear, suggest to the average reader
that those planets are in fact habitable, which is not confirmed yet (more on that soon).
&lt;strong&gt;CNET&lt;/strong&gt; was &lt;a href=&#34;https://www.cnet.com/pictures/trappist-1-star-system-could-host-life-exoplanets-earth-like/&#34;&gt;bolder&lt;/a&gt;
with a headline &lt;em&gt;&amp;lsquo;Incredible&amp;rsquo; star system could host life&lt;/em&gt;, but the &amp;ldquo;could&amp;rdquo; was a good word to use though
it spoke nothing to the actual probability. I &lt;em&gt;could&lt;/em&gt; win the lottery and get struck down by lightening and
then a meteor could hit the ambulance carrying me to the hospital, but I&amp;rsquo;m not going to bet on it.
The UK &lt;strong&gt;Telegraph&lt;/strong&gt; &lt;a href=&#34;http://www.telegraph.co.uk/science/2017/02/22/nasa-announcement-live/&#34;&gt;pushed it&lt;/a&gt; a bit
further with the headline &lt;em&gt;Nasa discovers new solar system TRAPPIST-1 - where life may have evolved on three planets&lt;/em&gt;.
The &lt;strong&gt;Guardian&lt;/strong&gt; &lt;a href=&#34;https://www.theguardian.com/science/2017/feb/24/lab-notes-is-there-life-on-exoplanets-orbiting-trappist-1&#34;&gt;asked&lt;/a&gt;
&lt;em&gt;is there life on exoplanets orbiting Trappist-1?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Even &lt;strong&gt;Fox News&lt;/strong&gt; got in on the fun by &lt;a href=&#34;http://www.foxnews.com/science/2017/02/23/keys-to-life-scientists-explain-how-newly-discovered-exoplanets-could-be-habitable.html&#34;&gt;asking a science reporter&lt;/a&gt; whether
this was &amp;ldquo;just a big deal or a way to get the general public interseted in space exploration to insure that it&amp;rsquo;s
properly funded&amp;hellip;?&amp;rdquo; in a video with the title &amp;ldquo;Could New Earth-like Planets Be Ripe for Colonization?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/trappist1isprobablynotalive-ad220.png&#34; alt=&#34;FoxNews&#34;&gt;&lt;/p&gt;
&lt;p&gt;For the record, I don&amp;rsquo;t have an issue with those headlines, as if that would matter anyway. I&amp;rsquo;m even
a bit fond of that &lt;a href=&#34;http://io9.gizmodo.com/nasa-is-turning-trappist-1-into-science-nerd-fanfic-1792713502&#34;&gt;creative website&lt;/a&gt;
that some planetary scientist have put up to host information and fan fiction related to TRAPPIST-1.
The more public interest they can drum up for their work, the more grant money that will
flow towards planetary and exoplanetary science.&lt;/p&gt;
&lt;p&gt;However, let&amp;rsquo;s bring this discussion back down to Earth for a moment.&lt;/p&gt;
&lt;h3 id=&#34;some-background-on-trappist-1&#34;&gt;Some background on TRAPPIST-1&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/TRAPPIST-1&#34;&gt;TRAPPIST-1&lt;/a&gt; is a very small and relatively cold
star that is about 40 light-years away from our solar system. TRAPPIST-1&amp;rsquo;s radial velocity
is 56.3 km/s towards us, which isn&amp;rsquo;t very fast. For example, the Juno spacecraft&amp;rsquo;s maximum
speed was about 73.6 km/s. The fastest speed of a (hu)manned spacecraft was achieved by
Apollo 10 at about 11.08 km/s.&lt;/p&gt;
&lt;p&gt;TRAPPIST-1 is so dim you can&amp;rsquo;t see it without a strong telescope.&lt;/p&gt;
&lt;p&gt;Two things are interesting about our findings on exoplanets: it is pretty common for a star to have planets (just a few decades ago this wasn&amp;rsquo;t an accepted reality); and our solar system seems to be a bit of an outlier in terms of the configuration of planets around the star based on what we&amp;rsquo;ve seen so far. A lot of these systems have Jupiter size or larger planets in very close orbit around the star; in the case of TRAPPIST-1, the star is much much weaker than the sun and all the planets we&amp;rsquo;ve found are in a very close tight orbit. This later fact may be due to selection bias, i.e. it is easier to find planets around a star when the planets are large and very close because the motion of the star is more strongly affected (for Doppler-effect discovered planets and also the luminosity detection method) and also when they are closer to the star and the plane of orbit is nearly head on relative to Earth. Also, of course, an Earth sized planet is going to cause a bigger
dip in the intensity of light of a dwarf star when passing in between our telescopes and that star than would a similar size planet,
say ours, have on a larger star like our sun (which itself isn&amp;rsquo;t all that big compared to some of the giant stars that can be
found in the universe, but is substantially bigger than TRAPPIST-1). So
right now the limitations of our detection technology is creating a statistical bias towards systems for which it is better
able to detect exoplanets. As the next generation observation equipment is developed, we may start finding more solar systems
which resemble ours.&lt;/p&gt;
&lt;h3 id=&#34;why-we-are-excited-about-this-discovery&#34;&gt;Why we are excited about this discovery&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Three of the planets are believed to be capable of hosting liquid water oceans.
Having liquid water oceans vastly increases the chances a planet could host
life.&lt;/li&gt;
&lt;li&gt;Ultracool stars, which TRAPPIST-1 is classified as, are &lt;a href=&#34;http://www.trappist.one/#about&#34;&gt;the most common type&lt;/a&gt; of
stars in our galaxy. The fact that TRAPPIST-1 has so many planets and so many planets that
are within the potentially habitable zone bodes well for our chances of finding life-hosting
exoplanets if the negatives in the next section aren&amp;rsquo;t enough to stop life from evolving.&lt;/li&gt;
&lt;li&gt;Because the stars are so small, it is easier to see the dip in light which an Earth-sized
planet would cause if it passes between us and TRAPPIST-1. TRAPPIST-1&amp;rsquo;s solar system&amp;rsquo;s orbital
plane happens to be position just right for us to see these planets crossing the star; random
chance says that only a ver small percentage of solar systems would yield this lucky result.
However, because ultracool stars are so common, the odds are in our favor that we will continue
to discover similar systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;why-we-shouldnt-be-too-excited-about-this-discovery&#34;&gt;Why we shouldn&amp;rsquo;t be too excited about this discovery&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The planets are probably tidally locked or near tidally locked and suffer run-away green house effects. One side of
planet always faces the sun, the other always faces dark space. The resulting temperature differential would result
in massive global winds if the planets retain their atmospheres. There is still a lot of &lt;a href=&#34;https://arxiv.org/abs/1602.05176&#34;&gt;debate&lt;/a&gt;
about where the habitable zone is for tidally locked systems, and the predictions that three of these planets
exist in the &amp;ldquo;Goldilocks zone&amp;rdquo; are not settled science.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As the director of the Carl Sagan Institute,
Lisa Kaltenegger, points out, these planets are incredibly close to their star
and their star could be emitting intense levels of ultraviolet light. UV radiation
is dangerous for life as we know it, so in order to host light the planets would
need some very serious ozone protection. Alternatively, assuming they had oceans,
and that their oceans didn&amp;rsquo;t boil away or freeze over, life would probably be limited
to deep oceans.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ultracool dwarfs are often violent stars with massive flares. However, TRAPPIST-1 is
relatively peaceful, according to some of the reports. [UPDATE AUG 10 2021]: See also the above update which suggests that these stars may not be as deadly via flares as originally thought.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;They may possibly have lost their atmospheres due to being so close to the star.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is only about 500 million years old, so there hasn&amp;rsquo;t been much time for
life to evolve even if the above issues didn&amp;rsquo;t prevent said evolution. These
stars, unlike ours, can hypothetically last for &lt;strong&gt;trillions&lt;/strong&gt; of years since
they &lt;a href=&#34;http://onlinelibrary.wiley.com/doi/10.1002/asna.200510440/abstract&#34;&gt;burn their hydrogen fuel much more slowly&lt;/a&gt;
than larger stars:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;assets/trappist1isprobablynotalive-c401a.png&#34; alt=&#34;trillions&#34;&gt;&lt;/p&gt;
&lt;p&gt;Even if some of oceans remain and are frozen over, that doesn&amp;rsquo;t rule out life.
Some of the moons in our solar system have frozen oceans of water where there is a suspected liquid layer underneath that could possible host life (e.g. Europa) which is why NASA has an interest in looking for potential life on Europa. So the conditions of the TRAPPIST-1 system may support some form of life but like with Europa, the ability for complex life to develop is highly limited due to lack of resources. Also, life can be fragile, and Earth went through many periods of mass extinctions; if any of the planets around TRAPPIST-1 have life, they are probably relegated to small regions in the twilight zones (that is, if one side always faces the star and the other always faces empty space, the part of the planet between these two zones would be in permanent twilight and have the mildest climates if the planets still have their atmospheres) making life on those planets much more vulnerable to total extinction, a fate Earth avoided in part due to being almost entirely habitable and thus having a more diverse biosphere.&lt;/p&gt;
&lt;h2 id=&#34;sobering-conclusions&#34;&gt;Sobering Conclusions&lt;/h2&gt;
&lt;p&gt;Forty lightyears is a long way away. Apollo 10&amp;rsquo;s max speed was around 11082.5 m/s which is the fastest manned craft speed we&amp;rsquo;ve ever obtained. That&amp;rsquo;s slower than how fast TRAPPIST-1 is moving toward us. 40 light years is 3.784e+17 meters away. If Apollo 10 went directly towards TRAPPIST-1 at its maximum obtained speed, it would close the distance at a rate of about 67082.5 m/s (the sum of its speed relative to Earth and the speed of TRAPPIST-1 relative to Earth using Galilean Relativity, these speeds are too slow to justify using Einstein&amp;rsquo;s Relativity). It would take Apollo 10 approximately 5.6408154e+12 seconds to make it to TRAPPIST-1. That&amp;rsquo;s nearly 178,846 years. Rocket technology hasn&amp;rsquo;t changed radically since then. And, of course, the astronauts wouldn&amp;rsquo;t live long enough to get even
a tiny fraction of the way there.&lt;/p&gt;
&lt;p&gt;Even if the entire world turned all of their defense spending towards producing a &lt;a href=&#34;https://en.wikipedia.org/wiki/Generation_ship&#34;&gt;Generation ship&lt;/a&gt; to reach TRAPPIST-1 and impoverished the planet&amp;rsquo;s resources to supply fuel and food supplies for said ship, we are still talking many tens of thousands of years at best, ignoring all threats to human life such as radiation, collision with stray objects, etc. One could easily imagine that within a few generations, the community on the generational
ship would lose faith in their great-grandparent&amp;rsquo;s mission and turn the ship around, assuming they had enough fuel to do so.
It is likely they would, as they would have to have some breaking capacity once they reach TRAPPIST-1, and then enough fuel
to escape TRAPPIST-1&amp;rsquo;s gravity well. All to say that this is never going to happen.&lt;/p&gt;
&lt;p&gt;Science fiction has sparked our imagination of traveling to the stars, but the cold reality is that while there is probably a lot of life off Earth in this Universe, everybody is trapped in their own solar systems by relativity and the vast distances between stars. Also, Earth is about 4.5 billion years old and we have about another few billion years until our sun eats its inner planets; who knows what can happen in those billions of years. Keep in mind that human-level intelligence is probably very rare in any case. Some scientist &lt;a href=&#34;http://www.npr.org/sections/krulwich/2012/10/22/163397584/how-human-beings-almost-vanished-from-earth-in-70-000-b-c&#34;&gt;have proposed based on genetic evidence&lt;/a&gt;
that at one point about 75,000 years ago the human species was once reduced to 3,000 - 10,000 individuals due to climate catastrophes. If this is true (and not all scientist think it is), then we were once very close to extinction. Earth was very close to losing its human population, becoming a wild planet whose greatest intelligence might be the non-human apes that survive today. Not only must a planet have the right conditions for life, it must also have the right conditions for complex life, and even then, it&amp;rsquo;s going to take some luck to get to a human-like intelligence.&lt;/p&gt;
&lt;p&gt;So we (complex intelligent life) are probably not alone but we are also probably very, very rare, and we likely won&amp;rsquo;t meet any alien intelligence before we go extinct.&lt;/p&gt;
&lt;h2 id=&#34;coda&#34;&gt;Coda&lt;/h2&gt;
&lt;p&gt;In regards to the discussion above on generation ships, there is something related to that known as
the &lt;a href=&#34;https://ui.adsabs.harvard.edu/abs/2006JBIS...59..239K/abstract&#34;&gt;Wait Calculation&lt;/a&gt; (A. Kennedy, &lt;em&gt;Interstellar Travel: The Wait Calculation and the Incentive Trap of Progress&lt;/em&gt;, JBIS &lt;strong&gt;59&lt;/strong&gt;, July 2006) which is relevant beyond the concept of a generation ship.&lt;/p&gt;
&lt;p&gt;From the abstract:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This paper describes an incentive trap of growth that shows that civilisations may delay interstellar exploration as long as voyagers have the reasonable expectation that whenever they set out growth will continue to progress and find quicker means of travel, overtaking them to reach and colonise the destination before they do. This paper analyses the voyagers&amp;rsquo; wait calculation, using the example of a trip to Barnard&amp;rsquo;s Star, and finds a surprising minimum to time to destination at a given rate of growth that affects the expansion of all civilisations. Using simple equations of growth, it can be shown that there is a time where the negative incentive to travel turns positive and where departures will beat departures made at all other times. Waiting for fear future technology will make a journey redundant is irrational since it can be shown that if growth rates alter then leaving earlier may be a better option. It considers that while growth is resilient and may follow surprising avenues, a future discovery producing a quantum leap in travel technology that justifies waiting is unlikely.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kennedy derives a &lt;strong&gt;Wait Equation&lt;/strong&gt;: &amp;ldquo;The wait equation describes &amp;hellip; the
point at which the negative incentive to leave changes to a positive one; where the incentive to set out on the interstellar
journey is the strongest.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;The equation assumes that the growth rate of the speed of the potential ship per year is tied to the
general global GDP growth rate:&lt;/p&gt;
&lt;p&gt;$$ v(t) = v_0 (1 + r)^t$$&lt;/p&gt;
&lt;p&gt;where $v$ is the velocity $t$ years after the velocity is $v_0$ and $r$ is the average growth rate year over year.
Since velocity is inversely proportional to the time it would take to reach the star, we can rewrite this as&lt;/p&gt;
&lt;p&gt;$$ \frac{T_0}{T} = (1+r)^t $$&lt;/p&gt;
&lt;p&gt;where $T$ is the time it would take if we waited $t$ years for technology to evolve, and $T_0$ is the time
to take if we were to launch with today&amp;rsquo;s current technology. The purpose of the &lt;strong&gt;Wait Equation&lt;/strong&gt; is to find the
sweet spot for launching such that to wait any longer would not return any advantage.&lt;/p&gt;
&lt;p&gt;We seek, then, the condition for which:&lt;/p&gt;
&lt;p&gt;$$ t  + \frac{T_0}{(1+r)^t} $$&lt;/p&gt;
&lt;p&gt;reaches a minimum. Using our previous rough estimate of 178,846 years for
Apollo 10 to reach TRAPPIST-1 and a growth rate of 1%,
we see that this minimum would happen about
seven centuries from now.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/trappist1isprobablynotalive-520e1.png&#34; alt=&#34;WaitEquation&#34;&gt;&lt;/p&gt;
&lt;p&gt;The implication, if you accept the premises of this equation, is that
to ensure that the generation ship we launch won&amp;rsquo;t be beat to the destination
by a faster model, we should wait about 700 years to launch.&lt;/p&gt;
&lt;p&gt;A word of warning, of course. This model is entirely unrealistic. It
would predict that we exceed the speed of light with our technology
in a little over 1000 years:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/trappist1isprobablynotalive-608bc.png&#34; alt=&#34;noway&#34;&gt;&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s in no way see this as a valid physical prediction. Instead, let&amp;rsquo;s see
it as sort of a conceptual starting point for a discussion about &amp;ldquo;the incentive
trap of progress.&amp;rdquo; I&amp;rsquo;ll revisit the &lt;em&gt;Wait Equation&lt;/em&gt; again in some future
blog post (probably) because it has applications elsewhere. For example,
it might help us understand why it may be better to avoid getting a first
or even second or third generation product. If you buy a first generation
product and you don&amp;rsquo;t have a budget such that you can buy an upgraded product
for many years ahead, then you will suffer a poorer quality product than you
might if you waited a year or two for the next iterations of that product
to improve. However, if you wait too long, you also harm yourself by denying
yourself access to that product, and waiting too long means that the net
harm to yourself could exceed the harm of buying too early.&lt;/p&gt;
&lt;p&gt;Indeed, that&amp;rsquo;s a potentially awesome post so let&amp;rsquo;s plan to discuss it again soon.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Putting a Space Station Over Philly With Final Cut Pro</title>
      <link>https://3implieschaos.org/post/other/putting-a-space-station-over-philly/</link>
      <pubDate>Mon, 20 Feb 2017 19:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/other/putting-a-space-station-over-philly/</guid>
      
      <description>&lt;h2 id=&#34;quick-overview&#34;&gt;Quick overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If interested in creating special effects for film projects.&lt;/li&gt;
&lt;li&gt;Uses Final Cut Pro X and CoreMelt&amp;rsquo;s TrackX Plugin&amp;rsquo;s Simple
Tracker.&lt;/li&gt;
&lt;li&gt;In about thirty minutes you can create a passable video that portrays the Star War&amp;rsquo;s Death Star over Philadelphia, PA USA.&lt;/li&gt;
&lt;li&gt;Resulting video:&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/it_wj78IbFA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;gathering-the-software&#34;&gt;Gathering the Software&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ll begin with an apology that the software discussed here requires Apple Mac* hardware to run. What we do here can be done with Adobe Premier Pro right out of the box.&lt;/p&gt;
&lt;p&gt;Assuming you have a Mac* device, this project also requires
&lt;a href=&#34;https://itunes.apple.com/us/app/final-cut-pro/id424389933?mt=12&#34;&gt;Final Cut Pro&lt;/a&gt;. This is not cheap software, but I&amp;rsquo;ve found it to be worth it if you plan to be doing enough projects. I have many nieces and nephews and we&amp;rsquo;ve had an awesome time making movies with this tool.&lt;/p&gt;
&lt;p&gt;Using Keyframing, we could get a realistic tracking effect, but this would be a very tedious and time consuming way to proceed. Fortunately there is a plugin we can use that does the tracking nearly automatically.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://coremelt.com/products/trackx-powered-by-mocha&#34;&gt;Coremelt&amp;rsquo;s TrackX Plugin&lt;/a&gt; powered by &lt;a href=&#34;https://www.imagineersystems.com/products/what-is-mocha/&#34;&gt;Mocha&lt;/a&gt; analyzes your video frame by frame and attempts to match the motion of the camera. The user needs only provide some very simple guidance.&lt;/p&gt;
&lt;h2 id=&#34;gathering-the-media&#34;&gt;Gathering the Media&lt;/h2&gt;
&lt;p&gt;A quick image search will yield a wide range of choices for images of a space station, in this case the Death Star, but keep an eye towards an example that would look realistic in the
context of your video. I chose an image that looked a lot
like what the moon looks like in the daytime.&lt;/p&gt;
&lt;p&gt;I also filmed a couple of scenes around Philadelphia,
being careful to move the camera enough to make it
seem realistic, but smoothly enough with no quick
motions to make tracking easier for myself.&lt;/p&gt;
&lt;h2 id=&#34;preparing-the-death-star-image&#34;&gt;Preparing the Death Star image&lt;/h2&gt;
&lt;p&gt;When you apply the image, however, you also must keep
in mind that if it doesn&amp;rsquo;t match the shadowing seen in
the video, the viewer&amp;rsquo;s mind will feel a bit off about it.
Look for the shadows in your video and flip the Death Star
image to match that direction using the &lt;em&gt;flipped&lt;/em&gt; effect:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/PuttingSpaceStationOverPhilly-c9525.png&#34; alt=&#34;flipped&#34;&gt;&lt;/p&gt;
&lt;p&gt;That is, import the media, drag it down to your timeline, and then drag the &lt;em&gt;flipped&lt;/em&gt; effect to the corresponding timeline entry of the Death Star image. Next right click on that
clip and create a new compound clip:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/PuttingSpaceStationOverPhilly-e69aa.png&#34; alt=&#34;compound_clip&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is required for the TrackX plugin. Once you&amp;rsquo;ve done
that, the compound clip of the Death Star will show up
in your media and you can delete from your time line.&lt;/p&gt;
&lt;p&gt;Because I had one scene facing West and another facing East,
which is not recommended because that would imply two
Death Stars in the sky, I needed to create two compound
clips, one flipped from the other, in order to match
the sun direction.&lt;/p&gt;
&lt;h2 id=&#34;tracking-your-video-clips&#34;&gt;Tracking your video clips&lt;/h2&gt;
&lt;p&gt;Next we can start the tracking process. Import your video
clips from your device or hard-drive and then drag the
corresponding file from the media section onto the timeline.&lt;/p&gt;
&lt;p&gt;Then, go to the &lt;em&gt;generators&lt;/em&gt; menu and select Simple Tracker
under the C2 TrackX entry:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/PuttingSpaceStationOverPhilly-230aa.png&#34; alt=&#34;generators&#34;&gt;&lt;/p&gt;
&lt;p&gt;Drag that &lt;strong&gt;on top of&lt;/strong&gt; the video clip. Your timeline
will look something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/PuttingSpaceStationOverPhilly-a7eb0.png&#34; alt=&#34;timeline&#34;&gt;&lt;/p&gt;
&lt;p&gt;Above, I have three video clips and I have trimmed
the Simple Tracker to fit each one and thus have three
Simple Tracker entries in the timeline, one for each video.&lt;/p&gt;
&lt;p&gt;Click on the Simple Tracker entry on the timeline and you&amp;rsquo;ll
now be able to set up tracking for your video:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;assets/PuttingSpaceStationOverPhilly-c80e1.png&#34; alt=&#34;simple_tracker&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figuring out what shape and placement for your area selection
in Simple Tracker is an art more or less. Be sure to select
an area that is completely in view for the majority of the clip.
In the above screenshot, I chose the top of two sky-scrapers that are clearly and consistently within view during the entire
clip. This helps the tracker maintain a passable tracking.&lt;/p&gt;
&lt;p&gt;Drag your compound clip of the Death Star that you made
in the previous step over to the Insert Layer section, and
then adjust the X, Y offsets and scale until the image placement
in your video looks satisfactory.&lt;/p&gt;
&lt;p&gt;In the timeline, move to the start of the
video, and after you set your tracking shape selection,
click on the &lt;em&gt;Track forward&lt;/em&gt; button (white sideways arrow
with the T in it). The plugin will iterate through each
frame attempting to track the camera location in
such a way that it can superimpose an image of the Death
Star on the sky so that it appears as if it is stationary
relative to the camera. In the resulting video (above)
you can see, if you look closely enough, some flaws, but
for the relatively small time put into it, the effect
is quite good.&lt;/p&gt;
&lt;h2 id=&#34;tutorial-video&#34;&gt;Tutorial Video&lt;/h2&gt;
&lt;p&gt;Finally, here is a quick how-to video walking you
through the process in real-time:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/se17wSZzKB8&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;further-references&#34;&gt;Further references&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bfhRtd1z2PY&#34;&gt;Another example of this plugin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NYfMugEz2zA&#34;&gt;Using Adobe to create this effect&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>DevOps 101: Chef Cookbook with Testing</title>
      <link>https://3implieschaos.org/post/tech/devops/chef-cookbook-example/</link>
      <pubDate>Sat, 28 Jan 2017 19:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/tech/devops/chef-cookbook-example/</guid>
      
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;h3 id=&#34;yet-another-chef-tutorial&#34;&gt;Yet another chef tutorial&lt;/h3&gt;
&lt;p&gt;You can of course skip this step if you are familiar with Chef to a great enough degree, but in the spirit of making this a self-contained walkthrough, we will start from the ground up.&lt;/p&gt;
&lt;h4 id=&#34;getting-started&#34;&gt;Getting started&lt;/h4&gt;
&lt;h5 id=&#34;installing-chefdk&#34;&gt;Installing ChefDK&lt;/h5&gt;
&lt;p&gt;It is widely considered best practice to use &lt;a href=&#34;https://downloads.chef.io/chefdk&#34;&gt;ChefDK&lt;/a&gt;, and this walkthrough uses ChefDK exclusively.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On Mac, install &lt;a href=&#34;http://brew.sh/&#34;&gt;HomeBrew&lt;/a&gt; and run &lt;code&gt;brew cask install chefdk&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;On Linux, &lt;a href=&#34;https://downloads.chef.io/chefdk&#34;&gt;download a package&lt;/a&gt; corresponding to your distro and install accordingly.&lt;/li&gt;
&lt;li&gt;On Windows: Run Linux as a Virtual Machine, get Docker for Windows, or &lt;em&gt;try&lt;/em&gt; using Bash on Windows, but this walkthrough doesn&amp;rsquo;t support Windows-based development.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;initiating-your-cookbook&#34;&gt;Initiating your cookbook&lt;/h5&gt;
&lt;p&gt;Let&amp;rsquo;s start with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chef generate cookbook c9_ide_chef
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command generates a template for a cookbook. Note that we use and underline in the name instead of a hyphen as hyphens can be problematic for chef in some circumstances. We now have a folder with the following content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── .gitignore
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── .kitchen.yml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Berksfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── README.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── chefignore
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── metadata.rb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── recipes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── default.rb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── spec
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── spec_helper.rb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── unit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       └── recipes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│           └── default_spec.rb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── &lt;span style=&#34;color:#a2f&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └── smoke
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        └── default
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            └── default_test.rb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It also  creates a &lt;code&gt;.delivery&lt;/code&gt; and a &lt;code&gt;.git&lt;/code&gt; folder whose contents are omitted here for clarity.&lt;/p&gt;
&lt;p&gt;The second command creates an attribute folder which we can populate with default attributes for our cookbook, and the third line creates a default template for a &amp;ldquo;message of the day&amp;rdquo; to be displayed when first logging in.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;.git&lt;/code&gt; directory is useful and we will use it as the basis for a new repo in github repo.&lt;/p&gt;
&lt;h5 id=&#34;pushing-to-github&#34;&gt;Pushing to GitHub&lt;/h5&gt;
&lt;p&gt;Now that we have the skeleton for our cookbook, we should start pushing to GitHub for version-control. On GitHub, create a public repo called c9_ide. Then run the following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;First commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote add origin git@github.com:YOUR_GITHUB_USERNAME/c9_ide_chef.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now the stage is set and we are ready to make the cookbook actually do something.&lt;/p&gt;
&lt;h4 id=&#34;create-the-core-configuration&#34;&gt;Create the core configuration&lt;/h4&gt;
&lt;h5 id=&#34;creating-a-story-for-the-cookbook&#34;&gt;Creating a story for the cookbook&lt;/h5&gt;
&lt;p&gt;So far we&amp;rsquo;ve seen how to set up the cookbook, but we don&amp;rsquo;t quite know what we are going to do with it. Now is a good time to set up some goals for our cookbook:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It should update all packages before doing anything else&lt;/li&gt;
&lt;li&gt;It should create a message of the day that gives basic information about the server to a user logging in&lt;/li&gt;
&lt;li&gt;It should install basic security packages and other utilities&lt;/li&gt;
&lt;li&gt;It should install the packages needed to run Cloud 9 IDE&lt;/li&gt;
&lt;li&gt;It should pull and install Cloud 9 IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;updating-all-packages&#34;&gt;Updating all packages&lt;/h6&gt;
&lt;p&gt;Just for fun, we are going to make our cookbook work for both Debian and RHEL variations of Linux. Under the recipes folder, let&amp;rsquo;s create a recipe file called &lt;code&gt;update.rb&lt;/code&gt; and give it contents:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Update system to start with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;case&lt;/span&gt; node&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;platform&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;debian&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    execute &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;AptUpdateUpgrade&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        command &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;apt-get update &amp;amp;&amp;amp; DEBIAN_FRONTEND=noninteractive apt-get upgrade -y&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;redhat&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;centos&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;fedora&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Update all packages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    execute &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;UpdateYum&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        command &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;yum -y update&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Add Fedora&amp;#39;s Extra Packages for Enterprise Linux&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    execute &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;GetEPELRepo&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        command &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-9.noarch.rpm&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        not_if &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;rpm -qa | grep -qx &amp;#39;epel-release-7-9.noarch&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;in the &lt;code&gt;default.rb&lt;/code&gt; recipe, add the line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_recipe &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9_ide::update&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s it for now! Before we go any further, let&amp;rsquo;s test this. Chef has automatically added some basis for testing to your repo. Let&amp;rsquo;s start with kitchen. This assumes you have &lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt; installed (if you don&amp;rsquo;t, install them). At the base directory, run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kitchen create
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kitchen converge
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first command creates the virtual machines for us to work with, and teh second command cooks Chef inside of them. It is a very convenient way to do a full test of your code before pushing to github. The converge command may take quite a while as we are updating all packages on the systems and doing it for two VMs, and Ubuntu one and a CentOS one. If all goes well, the final output looks like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chef Client finished, 1/1 resources updated in &lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt; minutes &lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; seconds
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;creating-a-c9-user&#34;&gt;Creating a C9 User&lt;/h6&gt;
&lt;p&gt;It is rarely a good idea to run a program as root. As such, our next step is to create a user for running the Cloud 9 IDE. We start by creating a data bag. First, install knife-solo and &lt;a href=&#34;https://github.com/thbishop/knife-solo_data_bag&#34;&gt;knife-solo data bag&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chef gem install knife-solo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chef gem install knife-solo_data_bag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is not entirely necessary, but that tool can be useful in other ways for making chef solo cookbooks. Then we can generate a databag and databag item:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir data_bags
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;EDITOR&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;vi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;knife solo data bag create users c9ide
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the editor that pops up, paste the following content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;c9ide&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;c9ide User&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;ssh_keys&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;home&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;/home/c9ide&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;#34;ssh_keygen&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, back to &lt;code&gt;recipe/default.rb&lt;/code&gt;, we can invoke the external chef recipe &amp;ldquo;users&amp;rdquo; to have this user installed on our system:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_recipe &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;user::data_bag&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To create an attributes file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chef generate attribute default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and in &lt;code&gt;attributes/default.rb&lt;/code&gt; add the line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;default&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9ide&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This of course shows the fantastic power and utility of Chef since we can call upon a wide range of libraries already created by the chef community. Now we need to tell Chef that we are using an external library, so in our &lt;code&gt;metadata.rb&lt;/code&gt; file at the top level we add the line at the end:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;depends          &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At the same level there is a Berksfile with the content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;https://supermarket.chef.io&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;metadata
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which tells chef to check this &lt;code&gt;metadata.rb&lt;/code&gt; file for dependencies (such as the user dependency we just added) that we need to pull and make available during cooking. We&amp;rsquo;ll show how this is done manually a bit later, but for now &lt;code&gt;kitchen converge&lt;/code&gt; takes care of that.&lt;/p&gt;
&lt;p&gt;Now run &lt;code&gt;kitchen converge&lt;/code&gt; one more time, and you should see that the user is created.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s create a quick smoke test item, add:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;describe user(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9ide&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    it { should exist }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to &lt;code&gt;test/default/default_test.rb&lt;/code&gt; and run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kitchen verify
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;if all went well you will see:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; User c9ide
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  should exist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now is a good time to push to github:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Adds update and users&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;installing-motd&#34;&gt;Installing MOTD&lt;/h6&gt;
&lt;p&gt;First, let&amp;rsquo;s generate a blank template file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chef generate template motd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;fill with content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;%&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; node&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;motd-attributes&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; %&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The hostname of this node is &amp;lt;%&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; node&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; %&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The IP address of this node is &amp;lt;%&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; node&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ipaddress&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; %&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and create a recipe file &lt;code&gt;recipes/motd.rb&lt;/code&gt; with contents:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;template &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/etc/motd&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a2f&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;motd.erb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      mode &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;0644&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and finally add this line to the &lt;code&gt;attributes/default.rb&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;default&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;motd-attributes&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;A Cloud 9 IDE server&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We add the following tests at &lt;code&gt;test/smoke/default/motd_test.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;describe directory(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/etc/motd&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# describe this directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	its(&lt;span style=&#34;color:#b8860b&#34;&gt;:content&lt;/span&gt;) { should match &lt;span style=&#34;color:#b68&#34;&gt;/A Cloud 9 IDE server/&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We run &lt;code&gt;kitchen converge&lt;/code&gt; and &lt;code&gt;kitchen verify&lt;/code&gt; again to make sure the recipe is fine, and then push to github as before.&lt;/p&gt;
&lt;h6 id=&#34;installing-packages&#34;&gt;Installing Packages&lt;/h6&gt;
&lt;p&gt;We are getting close to installing the Cloud9 IDE. Before doing so, we need to install some packages. Some of these packages are for security purposes, or convenience in administration, while others are needed for the Cloud 9 IDE system.&lt;/p&gt;
&lt;p&gt;Create a file &lt;code&gt;recipe/packages.rb&lt;/code&gt; with content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;case&lt;/span&gt; node&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;platform&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;debian&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    req_packages &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;fail2ban&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;gcc&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g++&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;git&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;htop&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;make&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;nodejs&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;nmap&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;npm&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;sysstat&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;apt-listchanges&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    req_packages&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;packs&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#800&#34;&gt;Chef&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#800&#34;&gt;Log&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Installing: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; packs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      package packs &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        action &lt;span style=&#34;color:#b8860b&#34;&gt;:install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    template &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/etc/apt/apt.conf.d/50unattended-upgrades&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        group &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        mode &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;0644&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        source &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;50unattended-upgrades.erb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    template &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/etc/apt/apt.conf.d/20auto-upgrades&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        group &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        mode &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;0644&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        source &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;20auto-upgrades.erb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;redhat&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;centos&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;fedora&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    req_packages &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;fail2ban&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;gcc-c++&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;git&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;glibc-static&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;htop&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;make&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;nodejs&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;nmap&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;npm&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;sysstat&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;yum-cron&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    req_packages&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;packs&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#800&#34;&gt;Chef&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#800&#34;&gt;Log&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Installing: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; packs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      package packs &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        action &lt;span style=&#34;color:#b8860b&#34;&gt;:install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    template &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/etc/yum/yum-cron.conf&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        group &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        mode &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;0644&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        source &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;yum-cron.conf.erb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    execute &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;systemctl enable yum-cron&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    execute &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;systemctl start yum-cron&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice that we have sneaked in automated security updates as well. For that, we require the following templates:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;templates/50unattended-upgrades.erb&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Automatically upgrade packages from these &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;origin, archive&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; pairs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Unattended-Upgrade::Allowed-Origins &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;% node&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;origins&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;.each &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt; |origin| %&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;lt;%= origin %&amp;gt;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;% end %&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// List of packages to not update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Unattended-Upgrade::Package-Blacklist &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;apache2&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;nginx&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//  &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;libc6-dev&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//  &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;libc6-i686&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Send email to this address &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; problems or packages upgrades
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// If empty or &lt;span style=&#34;color:#a2f&#34;&gt;unset&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;then&lt;/span&gt; no email is sent, make sure that you
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// have a working mail setup on your system. The package &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;mailx&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// must be installed or anything that provides /usr/bin/mail.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;%&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; node&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;send_email&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; ? &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;// &amp;#34;&lt;/span&gt; %&amp;gt;Unattended-Upgrade::Mail &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;lt;%= node[&amp;#39;unattended-upgrades&amp;#39;][&amp;#39;email_address&amp;#39;] %&amp;gt;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Do automatic removal of new unused dependencies after the upgrade
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;equivalent to apt-get autoremove&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Unattended-Upgrade::Remove-Unused-Dependencies &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;lt;%= node[&amp;#39;unattended-upgrades&amp;#39;][&amp;#39;auto_remove&amp;#39;] ? &amp;#34;&lt;/span&gt;true&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34; : &amp;#34;&lt;/span&gt;false&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34; %&amp;gt;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Automatically reboot *WITHOUT CONFIRMATION* &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// the file /var/run/reboot-required is found after the upgrade
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Unattended-Upgrade::Automatic-Reboot &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;lt;%= node[&amp;#39;unattended-upgrades&amp;#39;][&amp;#39;auto_reboot&amp;#39;] ? &amp;#34;&lt;/span&gt;true&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34; : &amp;#34;&lt;/span&gt;false&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34; %&amp;gt;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;templates/20auto-upgrades.erb&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;APT::Periodic::Update-Package-Lists &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;lt;%=node[&amp;#39;unattended-upgrades&amp;#39;][&amp;#39;update_package_lists_interval&amp;#39;]%&amp;gt;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;APT::Periodic::Unattended-Upgrade &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;lt;%=node[&amp;#39;unattended-upgrades&amp;#39;][&amp;#39;upgrade_interval&amp;#39;]%&amp;gt;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;&lt;code&gt;templates/yum-cron.conf.erb&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;update_cmd&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; security
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;apply_updates&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; yes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;default&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;update_package_lists_interval&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;default&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;upgrade_interval&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;default&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;origins&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;${distro_id} ${distro_codename}-security&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;default&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;send_email&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;default&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;email_address&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;test@example.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;default&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;auto_remove&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;default&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;auto_reboot&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and of course, our inspec test in &lt;code&gt;test/smoke/default/packages_test.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;:family&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;debian&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	req_packages &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;fail2ban&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;gcc&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;g++&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;git&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;htop&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;make&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;nodejs&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;nmap&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;npm&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;sysstat&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;unattended-upgrades&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;apt-listchanges&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    req_packages&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;packs&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      describe package(packs) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      	it { should be_installed }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    req_packages &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;fail2ban&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;gcc-c++&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;git&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;glibc-static&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;htop&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;make&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;nodejs&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;nmap&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;npm&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;sysstat&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;yum-cron&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    req_packages&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;packs&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      describe package(packs) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      	it { should be_installed }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;installing-cloud-9-ide&#34;&gt;Installing Cloud 9 IDE&lt;/h6&gt;
&lt;p&gt;Chef has a built-in git resource that we can use to pull the Cloud 9 IDE code.&lt;/p&gt;
&lt;p&gt;The test for this section will be rather brief:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;describe directory(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/home/c9ide/core/README.md&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# describe this directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	its(&lt;span style=&#34;color:#b8860b&#34;&gt;:content&lt;/span&gt;) { should match &lt;span style=&#34;color:#b68&#34;&gt;/^Cloud9/&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and the reason is that we can really verify whether or not this section succeeded in the next section on running via supervisor.&lt;/p&gt;
&lt;p&gt;The code for this section, in &lt;code&gt;/recipes/c9ide.rb&lt;/code&gt;, is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;/home/c9ide/core&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   repository &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;https://github.com/c9/core.git&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   reference &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;master&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   action &lt;span style=&#34;color:#b8860b&#34;&gt;:sync&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;case&lt;/span&gt; node&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;platform&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;debian&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	bash &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;create nodejs link&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		code &lt;span style=&#34;color:#b44&#34;&gt;&amp;lt;&amp;lt;-EOH
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&lt;/span&gt;		ln &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;s &lt;span style=&#34;color:#b68&#34;&gt;/usr/&lt;/span&gt;bin&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;nodejs &lt;span style=&#34;color:#b68&#34;&gt;/usr/&lt;/span&gt;bin&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;node
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#800&#34;&gt;EOH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		not_if { &lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#800&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;exist?(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/usr/bin/node&amp;#39;&lt;/span&gt;) }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bash &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;install_cloud9ide&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   cwd &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/home/c9ide/core/&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   user &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   code &lt;span style=&#34;color:#b44&#34;&gt;&amp;lt;&amp;lt;-EOH
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&lt;/span&gt;     scripts&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;install&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;sdk&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#800&#34;&gt;EOH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   environment &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;PREFIX&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/usr/local&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;installing-supervisor&#34;&gt;Installing Supervisor&lt;/h6&gt;
&lt;p&gt;Finally, we want to leave our server running Cloud 9 IDE after provisioning it. Supervisor is a fantastic way to do so, though of course not the only way and perhaps not even the best way, but it is a convenient and production-ready solution (though this development kit version of Cloud 9 IDE is not production material and is meant for development purposes).&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;recipes/supervisor.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;package &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;supervisor&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    action &lt;span style=&#34;color:#b8860b&#34;&gt;:install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;case&lt;/span&gt; node&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;platform&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;debian&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;ubuntu&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cookbook_file &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/etc/supervisor/conf.d/cloud9ide.conf&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  source &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9ide.conf&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  owner &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  group &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  mode &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;0755&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  action &lt;span style=&#34;color:#b8860b&#34;&gt;:create&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	execute &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;start supervisor&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  command &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;service supervisor start&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	execute &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;reload supervisor&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  command &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;supervisorctl update&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;redhat&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;centos&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;fedora&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cookbook_file &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;/etc/supervisord.d/cloud9ide.ini&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  source &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9ide.conf&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  owner &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  group &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  mode &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;0755&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  action &lt;span style=&#34;color:#b8860b&#34;&gt;:create&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	execute &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;start supervisor&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  command &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;service supervisord start&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	execute &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;reload supervisor&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  command &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;supervisorctl update&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and finally add this to the &lt;code&gt;c9ide_test.rb&lt;/code&gt; test file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;describe port(&lt;span style=&#34;color:#666&#34;&gt;9999&lt;/span&gt;) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  it { should be_listening }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;putting-it-all-together&#34;&gt;Putting it all together&lt;/h5&gt;
&lt;p&gt;The default recipe should now look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_recipe &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9_ide::update&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_recipe &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;user::data_bag&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_recipe &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9_ide::motd&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_recipe &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9_ide::packages&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_recipe &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9_ide::cloud9ide&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_recipe &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;c9_ide::supervisor&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;we run a final &lt;code&gt;kitchen converge&lt;/code&gt;; if all goes well, we follow up with a final &lt;code&gt;kitchen verify&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----&amp;gt; Starting Kitchen &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;v1.14.2&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----&amp;gt; Setting up &amp;lt;default-ubuntu-1604&amp;gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Finished setting up &amp;lt;default-ubuntu-1604&amp;gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;0m0.00s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----&amp;gt; Verifying &amp;lt;default-ubuntu-1604&amp;gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Loaded
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Target:  ssh://vagrant@127.0.0.1:2222
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  File /home/c9ide/core/README.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  content should match /^Cloud9/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Port &lt;span style=&#34;color:#666&#34;&gt;9999&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  should be listening
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  User c9ide
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  should exist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  File /etc/motd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  content should match /A Cloud &lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt; IDE server/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  fail2ban should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  gcc should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  g++ should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  git should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  htop should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  make should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  nodejs should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  nmap should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  npm should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  sysstat should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  unattended-upgrades should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  apt-listchanges should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Test Summary: &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt; successful, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; failures, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; skipped
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Finished verifying &amp;lt;default-ubuntu-1604&amp;gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;0m1.28s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----&amp;gt; Setting up &amp;lt;default-centos-72&amp;gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Finished setting up &amp;lt;default-centos-72&amp;gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;0m0.00s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----&amp;gt; Verifying &amp;lt;default-centos-72&amp;gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Loaded
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Target:  ssh://vagrant@127.0.0.1:2200
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  File /home/c9ide/core/README.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  content should match /^Cloud9/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Port &lt;span style=&#34;color:#666&#34;&gt;9999&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  should be listening
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  User c9ide
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  should exist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  File /etc/motd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  content should match /A Cloud &lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt; IDE server/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  fail2ban should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  gcc-c++ should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  git should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  glibc-static should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  htop should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  make should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  nodejs should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  nmap should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  npm should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  sysstat should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System Package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ✔  yum-cron should be installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Test Summary: &lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt; successful, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; failures, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; skipped
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Finished verifying &amp;lt;default-centos-72&amp;gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;0m13.80s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----&amp;gt; Kitchen is finished. &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;0m16.47s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Congratulations, you have a basic working chef recipe for installing Cloud 9 IDE, tested and provisioned on both major families of Linux.&lt;/p&gt;
&lt;h3 id=&#34;source-code&#34;&gt;Source Code&lt;/h3&gt;
&lt;p&gt;You can find the source code for this recipe on my github account &lt;a href=&#34;https://github.com/3implieschaos/c9_ide_chef/tree/PartI&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;future-steps&#34;&gt;Future Steps&lt;/h3&gt;
&lt;p&gt;We took some shortcuts and avoided some best practices for convenience here. Ideally we would like some unit tests and to pull in more community recipes. For example, the supervisor chef cookbook could be used here instead of dealing with that in a platform case.&lt;/p&gt;
&lt;p&gt;In the forthcoming Part II, we will use Puppet, a widely used alternative to Chef, to provision a server that runs the Cloud 9 IDE SDK as we have here with Chef.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Python Uses Operational Chaining for Boolean Comparisons</title>
      <link>https://3implieschaos.org/post/tech/comp_sci/python-operational-chaining/</link>
      <pubDate>Fri, 20 Jan 2017 19:21:05 -0700</pubDate>
      
      <guid>https://3implieschaos.org/post/tech/comp_sci/python-operational-chaining/</guid>
      
      <description>&lt;h2 id=&#34;a-python-feature&#34;&gt;A Python feature?&lt;/h2&gt;
&lt;p&gt;A colleague noticed this behavior:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; (&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d2413a;font-weight:bold&#34;&gt;TypeError&lt;/span&gt;: argument of &lt;span style=&#34;color:#a2f&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;bool&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;not&lt;/span&gt; iterable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;offering a bucket of doubloons to anyone who can explain it. The final case is simply a typecasting problem, but the first two cases demonstrate Python&amp;rsquo;s operating chaining behavior.&lt;/p&gt;
&lt;h2 id=&#34;explanation&#34;&gt;Explanation&lt;/h2&gt;
&lt;h3 id=&#34;using-the-dis-module-to-dig-deeper&#34;&gt;Using the Dis Module to dig deeper&lt;/h3&gt;
&lt;p&gt;Using the  &lt;code&gt;dis&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; module, we find:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; (&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; (&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt; DUP_TOP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt; ROT_THREE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;8&lt;/span&gt; COMPARE_OP               &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt; (&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt; JUMP_IF_FALSE_OR_POP    &lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt; COMPARE_OP               &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; RETURN_VALUE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; ROT_TWO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; POP_TOP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;23&lt;/span&gt; RETURN_VALUE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; (&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; (&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt; COMPARE_OP               &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt; (&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt; JUMP_IF_FALSE_OR_POP    &lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; (&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; COMPARE_OP               &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; RETURN_VALUE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; (&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; (&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt; DUP_TOP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt; ROT_THREE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#666&#34;&gt;8&lt;/span&gt; COMPARE_OP               &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt; (&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt; JUMP_IF_FALSE_OR_POP    &lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; LOAD_CONST               &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt; COMPARE_OP               &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; RETURN_VALUE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; ROT_TWO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; POP_TOP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#666&#34;&gt;23&lt;/span&gt; RETURN_VALUE
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;in-words&#34;&gt;In words&lt;/h3&gt;
&lt;p&gt;Parenthesis essential forces Python to do &amp;lsquo;something&amp;rsquo; first before doing anything else. I often use parenthesis out of habit even when not needed just to be 100% clear. The above behavior shows where that habit might come in handy if Python&amp;rsquo;s operation chaining isn&amp;rsquo;t the desired behavior. When we put &lt;code&gt;&#39;a&#39; in &#39;b&#39;&lt;/code&gt; inside parenthesis, Python is forced to evaluate that independently of the rest of line; this evaluates to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, and then the &lt;code&gt;== 0&lt;/code&gt; comparison acts as a Boolean comparison, giving expected behavior since Python sees False and 0 as equivalent here.&lt;/p&gt;
&lt;p&gt;In the first instance above, however, Python is operator chaining. For &lt;code&gt;&#39;a&#39; in &#39;b&#39; == 0&lt;/code&gt;, it first loads a and b strings such that the stack is&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[ b, a ]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;it then &lt;code&gt;DUP_TOP&lt;/code&gt; duplicates &lt;code&gt;b&lt;/code&gt; so that it doesn’t have to waste time to load it again for the second evaluation, resulting in the stack:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[ b, b, a ]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ROT_THREE&lt;/code&gt; lifts second and third stack item up and the top item down to third place, so now the stack is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[ b, a, b ]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;COMPARE_OP&lt;/code&gt; acts on &lt;code&gt;[ b, a]&lt;/code&gt;, and since it is not true, &lt;code&gt;JUMP_IF_FALSE_OR_POP&lt;/code&gt; forces it to jump and just returns False. This makes sense because it
sees this as a compound AND statement, and when the first part of an AND statement is false, the entire thing is false and it is a waste of
resources to compute further.&lt;/p&gt;
&lt;p&gt;What is interesting is if you do &lt;code&gt;&#39;a&#39; in &#39;a&#39; == 1&lt;/code&gt;,  or &lt;code&gt;&#39;a&#39; in &#39;a&#39; == 0&lt;/code&gt;. Take the former, for example,
which after &lt;code&gt;DUP_TOP&lt;/code&gt; gives us the stack:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[ a, a, a ]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here &lt;code&gt;&#39;a&#39; in &#39;a&#39;&lt;/code&gt; is obviously true, and these two entries of the stack are replaced with the result of that evaluation, which is &lt;code&gt;True&lt;/code&gt;. This, now being the top of the stack, is popped off by &lt;code&gt;JUMP_IF_FALSE_OR_POP&lt;/code&gt;
leaving the duplicated &amp;lsquo;a&amp;rsquo; on the top of the stack, where then &lt;code&gt;1&lt;/code&gt; is loaded for the next comparison, so the stack is now:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, a]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and the &lt;code&gt;==&lt;/code&gt; comparison is applied which is indeed False.
Thus &lt;code&gt;&#39;a&#39; in &#39;a&#39; == 0&lt;/code&gt; is chained as &lt;code&gt;&#39;a&#39; in &#39;a&#39; and &#39;a&#39; == 0&lt;/code&gt; and will also be false. Similarly, &lt;code&gt;&#39;a&#39; in &#39;b&#39; == 0&lt;/code&gt; is effectively the same as &lt;code&gt;&#39;a&#39; in &#39;b&#39; and &#39;b&#39; == 0&lt;/code&gt; which is false.&lt;/p&gt;
&lt;p&gt;The following behavior, then, makes sense:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;code&gt;pip install dis&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
      
    </item>
    
  </channel>
</rss>
